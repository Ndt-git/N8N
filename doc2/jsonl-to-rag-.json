{
  "createdAt": "2025-07-11T19:49:36.070Z",
  "updatedAt": "2025-07-18T18:00:12.116Z",
  "id": "PDO5B0oFcAc57jBs",
  "name": "Jsonl to rag",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -360,
        -20
      ],
      "id": "86b3a718-732f-4100-b57b-2260422b7469",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "fileSelector": "={{ $('Loop Over Items').item.json.path }}",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        1540,
        -480
      ],
      "id": "cc41bcda-63b9-4e2d-a86b-f184317b2995",
      "name": "Read/Write Files from Disk"
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1700,
        -480
      ],
      "id": "8ac05fc3-1448-4a04-b900-d4b34ca5e3c1",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "functionCode": "return [{ json: { query: 'qual e a melhor forma de pagamento' } }];"
      },
      "id": "1863edba-1ee6-43be-a066-8ac6b9f83ca1",
      "name": "Query Input",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        480,
        440
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT id, title, content,\n       bm25_score_improved(advanced_tokenize('{{ $json.query }}'), tokens) AS bm25_score\nFROM documents\nWHERE tokens && advanced_tokenize('{{ $json.query }}')\nORDER BY bm25_score DESC\nLIMIT 10;\n",
        "options": {}
      },
      "id": "074f3b66-ef51-4707-afed-51ea08366fcc",
      "name": "BM25 Postgres",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2,
      "position": [
        980,
        280
      ],
      "credentials": {
        "postgres": {
          "id": "z2oHR8Hcbud4cXb6",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "\nSELECT\n    id,\n    title,\n    content,\n    1 - (embedding <=> '{{ $json[\"embeddings\"] ? '[' + $json[\"embeddings\"].join(\",\") + ']' : '[]' }}'::vector) AS similarity\nFROM\n    documents\nORDER BY\n    similarity DESC\nLIMIT 10;",
        "options": {}
      },
      "id": "a1448496-9946-414b-93e3-b914b59b968a",
      "name": "Vector PGVector",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2,
      "position": [
        1000,
        520
      ],
      "credentials": {
        "postgres": {
          "id": "z2oHR8Hcbud4cXb6",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "const combined = $input.all().map(e => e.json);\ncombined.sort((a, b) => ((b.bm25_score || 0) + (b.vector_score || 0)) - ((a.bm25_score || 0) + (a.vector_score || 0)));\nreturn combined.slice(0, 5).map((item, idx) => ({ json: { rank: idx + 1, conteudo: item.conteudo, score: (item.bm25_score || 0) + (item.vector_score || 0) } }));"
      },
      "id": "4c356eb0-abe3-4bd7-852e-e6cd708dbb64",
      "name": "Sort + Rank",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1980,
        600
      ]
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "id": "cd77af6b-8821-4aa9-8efb-1d80013b86c1",
      "name": "Agent LLM",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        1500,
        420
      ],
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "// Função para criar chunks de mensagens para RAG (remetente: mensagem + metadados)\nfunction createMessageChunks(input) {\n\ttry {\n\t\tconst rawData = input[0].data;\n\t\tconst messageLines = rawData.trim().split('\\n');\n\n\t\tconst messages = messageLines.map(line => {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(line);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('Erro ao parsear linha:', line);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}).filter(msg => msg !== null);\n\n\t\tconst chunkSize = 5;\n\t\tconst stepSize = 3;\n\t\tconst chunks = [];\n\n\t\tfor (let i = 0; i < messages.length; i += stepSize) {\n\t\t\tconst chunk = messages.slice(i, i + chunkSize);\n\n\t\t\tif (chunk.length > 0) {\n\t\t\t\tconst textContent = chunk.map(msg =>\n\t\t\t\t\t`${msg.remetente}: ${msg.mensagem}`\n\t\t\t\t).join('\\n');\n\n\t\t\t\tchunks.push({\n\t\t\t\t\tchunkId: Math.floor(i / stepSize),\n\t\t\t\t\tstartIndex: i,\n\t\t\t\t\tendIndex: Math.min(i + chunkSize - 1, messages.length - 1),\n\t\t\t\t\tmessageCount: chunk.length,\n\t\t\t\t\ttextContent: textContent,\n\t\t\t\t\tmetadata: {\n\t\t\t\t\t\tdateRange: {\n\t\t\t\t\t\t\tstart: chunk[0].data,\n\t\t\t\t\t\t\tend: chunk[chunk.length - 1].data\n\t\t\t\t\t\t},\n\t\t\t\t\t\tparticipants: [...new Set(chunk.map(msg => msg.remetente))],\n\t\t\t\t\t\ttotalMessages: chunk.length\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn chunks;\n\n\t} catch (error) {\n\t\tconsole.error('Erro ao processar chunks:', error);\n\t\treturn [{ error: 'Erro ao processar os dados', details: error.message }];\n\t}\n}\n\n// Entrada no n8n\nconst input = [\n\t{\n\t\tdata: $json.data\n\t}\n];\n\n// Processa os chunks\nconst chunks = createMessageChunks(input);\n\n// Retorna uma lista de chunks como itens\nreturn chunks.map(chunk => ({ json: chunk }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1920,
        -480
      ],
      "id": "f87a0059-cfe4-4534-82b5-d3977f43a713",
      "name": "Code"
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "https://api.cohere.ai/v1/embed",
        "options": {}
      },
      "name": "Generate Embedding",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        2020,
        280
      ],
      "id": "89afae6d-95ab-4656-962c-dea2461f07ae"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT id, title, content, hybrid_search_score($1::vector, embedding, $2::text, content) AS score FROM documents ORDER BY score DESC LIMIT 5;",
        "options": {}
      },
      "name": "Hybrid Search PostgreSQL",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2,
      "position": [
        2320,
        280
      ],
      "id": "e8d65f4f-180c-48dc-965e-fa83ee7eb114",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.myNewField = 1;\n}\n\nreturn $input.all();"
      },
      "name": "Format Context",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2620,
        280
      ],
      "id": "e1d17bc6-c09f-4718-99ab-15c1ffe49eb0"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.cohere.com/v1/embed",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"embed-english-v3.0\",\n  \"input_type\": \"search_document\",\n  \"texts\": [\n    \"{{ $('Code').item.json.textContent.replace(/\\n/g, '\\\\n') }}\"\n  ]\n} ",
        "options": {}
      },
      "id": "417c613e-fe4d-4a4f-b7cb-d5b649145f03",
      "name": "Gerar_Embedding_Cohere",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        2760,
        -520
      ],
      "typeVersion": 4.2,
      "credentials": {
        "httpHeaderAuth": {
          "id": "03YDVFAIy9hThLx8",
          "name": "coherepg"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO documents (title, content, embedding)\nVALUES ($1, $2, $3::vector)\nRETURNING id, content;\n",
        "options": {
          "queryReplacement": "={{$('Edit Fields').item.json[\"title\"]}}, {{$json[\"texts\"]}}, {{ $json[\"embeddings\"] ? '[' + $json[\"embeddings\"].join(\",\") + ']' : '[]' }}\n"
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        3180,
        -520
      ],
      "id": "3d8669b0-91e7-425a-9376-d3bdb3e3bb3a",
      "name": "Execute a SQL query",
      "credentials": {
        "postgres": {
          "id": "z2oHR8Hcbud4cXb6",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "23a613dd-27ef-44ca-a148-f76fa059e8b1",
              "leftValue": "={{ $json.metadata.totalMessages }}",
              "rightValue": 2,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2460,
        -480
      ],
      "id": "b7fc9f84-8b0d-4b0f-a785-f2dab6fa44fb",
      "name": "If"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2760,
        -340
      ],
      "id": "212deb2a-95ac-4882-b240-5c03aaed6bf3",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "873643d3-25b5-407e-b20e-664e4ea299ea",
              "name": "title",
              "value": "Atendimento WhatsApp Guardião Lajes",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2980,
        -520
      ],
      "id": "a2d11ba4-99ee-4920-a27d-453e45a3acd1",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.cohere.com/v1/embed",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"embed-english-v3.0\",\n  \"input_type\": \"search_document\",\n  \"texts\": [\n    \"{{ $json.query }}\"\n  ]\n} ",
        "options": {}
      },
      "id": "b6aee897-a6a2-458d-8bb6-bad0bb882fce",
      "name": "Gerar_Embedding_Cohere1",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        780,
        520
      ],
      "typeVersion": 4.2,
      "credentials": {
        "httpHeaderAuth": {
          "id": "OyCraanHEQ1O0xVC",
          "name": "cohere"
        }
      }
    },
    {
      "parameters": {
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1780,
        260
      ],
      "id": "c5df257e-dadb-407d-91d3-23e2283b0543",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "jsCode": "const bm25Items = items[0].json ? items.map(item => item.json) : [];\nconst vectorItems = items[1].json ? items.map(item => item.json) : [];\n\nconst merged = {};\n\n// Indexar BM25\nfor (const item of bm25Items) {\n    merged[item.id] = { ...item };\n}\n\n// Indexar Vector\nfor (const item of vectorItems) {\n    if (!merged[item.id]) {\n        merged[item.id] = { ...item };\n    } else {\n        Object.assign(merged[item.id], item);\n    }\n}\n\n// Calcular score combinado e normalizar\nconst bm25Max = 20; // ajuste conforme seu dataset\nconst weightBm25 = 0.3;\nconst weightVector = 0.7;\n\nconst result = Object.values(merged).map(item => {\n    const bm25Norm = item.bm25_score ? item.bm25_score / bm25Max : 0;\n    const vectorNorm = item.similarity ?? 0;\n    const scoreCombinado = weightBm25 * bm25Norm + weightVector * vectorNorm;\n\n    return {\n        json: {\n            ...item,\n            bm25Norm,\n            vectorNorm,\n            scoreCombinado\n        }\n    };\n});\n\n// Ordenar descrescente pelo score_combinado\nresult.sort((a, b) => b.json.scoreCombinado - a.json.scoreCombinado);\n\nreturn result.slice(0, 5);\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1680,
        460
      ],
      "id": "1f54a191-f31b-40c4-9e74-a9a696a2ed9d",
      "name": "Code1"
    },
    {
      "parameters": {
        "mode": "multiplex"
      },
      "id": "1d5828c9-1d95-4f7b-af51-352e3e74da42",
      "name": "Merge BM25 + Vector1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 1,
      "position": [
        1500,
        620
      ]
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1480,
        460
      ],
      "id": "78f61442-a6ae-445d-9b8f-1be8a747d346",
      "name": "Merge"
    },
    {
      "parameters": {
        "jsCode": "const normalizeText = (text) => {\n  return text\n    .split('\\n') // separa cada linha de fala\n    .map(line => {\n      const parts = line.split(':');\n      if (parts.length >= 2) {\n        const speaker = parts[0]\n          .toLowerCase()\n          .normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\n          .trim();\n\n        const message = parts.slice(1).join(':')\n          .toLowerCase()\n          .normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\n          .replace(/[^\\w\\s]/g, \"\") // remove pontuação da mensagem\n          .replace(/\\s+/g, \" \")\n          .trim();\n\n        return `${speaker}: ${message}`;\n      } else {\n        // caso seja uma linha sem \":\", apenas normaliza\n        return line\n          .toLowerCase()\n          .normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\n          .replace(/[^\\w\\s]/g, \"\")\n          .replace(/\\s+/g, \" \")\n          .trim();\n      }\n    })\n    .join('\\n');\n};\n\nreturn items.map(item => {\n  const normalized = normalizeText(item.json.textContent);\n\n  return {\n    json: {\n      ...item.json,\n      textContent_normalized: normalized\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2200,
        -480
      ],
      "id": "efe8992c-100b-4280-a8fd-aed643c293cf",
      "name": "Code2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        80,
        -20
      ],
      "id": "8034270d-364d-43f3-a422-5c139abcf894",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "command": "=find /mnt/externo/whatsapp_exports/extracted -type f -name \"*.jsonl\""
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        120,
        -300
      ],
      "id": "81871f15-09e2-42a0-a609-a922f091a7d1",
      "name": "list past extraidos"
    },
    {
      "parameters": {
        "jsCode": "// Recebe stdout do Execute Command e transforma em array de caminhos\nconst paths = $json.stdout.trim().split('\\n');\nreturn paths.map(path => ({ json: { path } }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        320,
        -300
      ],
      "id": "c483f5fb-bfd9-4720-9a91-9315e42ccaf1",
      "name": "Code3"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        540,
        -300
      ],
      "id": "191019e0-b814-4a85-bb8e-109e9eec1115",
      "name": "Loop Over Items"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "name": "Replace Me",
      "typeVersion": 1,
      "position": [
        3400,
        -160
      ],
      "id": "3aef9efb-a477-48b4-842b-809f2bfc795a"
    },
    {
      "parameters": {
        "operation": "get",
        "key": "entrada_BD",
        "keyType": "list",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        740,
        -220
      ],
      "id": "d677e547-50e9-424a-8b5a-f54f564b280f",
      "name": "Redis",
      "credentials": {
        "redis": {
          "id": "sA2U6PkBocrwko3a",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "entrada_BD",
        "messageData": "={{ $('Loop Over Items').item.json.path }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3420,
        -520
      ],
      "id": "3ab0549e-b42f-48c1-8447-95cf97fcadd6",
      "name": "Redis1",
      "credentials": {
        "redis": {
          "id": "sA2U6PkBocrwko3a",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "1749e978-465d-4a73-bfd2-9bc93f4279ef",
              "leftValue": "={{ $json.propertyName }}",
              "rightValue": "={{ $('Loop Over Items').item.json.path }}",
              "operator": {
                "type": "array",
                "operation": "notContains",
                "rightType": "any"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        960,
        -220
      ],
      "id": "4f6de506-ce66-48dd-9c3d-a729b5d914b5",
      "name": "If1"
    },
    {
      "parameters": {
        "jsCode": "// Obter resultados do node BM25 e Vetorial\nconst bm25Results = $items(\"BM25\", 0).json;     // deve ser array de objetos com id e bm25_score\nconst vectorResults = $items(\"Vetorial\", 0).json; // idem, mas com vector_score ou similarity\n\n// Criar dicionário combinado por ID\nconst combined = {};\n\n// Inserir BM25\nfor (const doc of bm25Results) {\n  combined[doc.id] = {\n    id: doc.id,\n    title: doc.title,\n    content: doc.content,\n    bm25_score: doc.bm25_score || 0,\n    vector_score: 0,\n  };\n}\n\n// Inserir Vetorial\nfor (const doc of vectorResults) {\n  if (!combined[doc.id]) {\n    combined[doc.id] = {\n      id: doc.id,\n      title: doc.title,\n      content: doc.content,\n      bm25_score: 0,\n      vector_score: doc.similarity || doc.vector_score || 0,\n    };\n  } else {\n    combined[doc.id].vector_score = doc.similarity || doc.vector_score || 0;\n  }\n}\n\n// Calcular score final com pesos (ajuste como quiser)\nconst bm25Weight = 0.5;\nconst vectorWeight = 0.5;\n\nconst results = Object.values(combined).map(doc => {\n  const score = (bm25Weight * doc.bm25_score) + (vectorWeight * doc.vector_score);\n  return {\n    json: {\n      ...doc,\n      combined_score: score\n    }\n  };\n});\n\n// Ordenar por maior score\nresults.sort((a, b) => b.json.combined_score - a.json.combined_score);\n\n// Retornar para o fluxo\nreturn results;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1500,
        180
      ],
      "id": "26028724-defa-4b35-875c-af7435e2dba6",
      "name": "Code4"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n    id,\n    title,\n    content,\n    COALESCE(ts_rank_cd(tsv_content, websearch_to_tsquery('portuguese', '{{ $json.query }}')), 0) AS score_bm25,\n    (1 - (embedding <=> '{{ $json[\"embeddings\"] ? '[' + $json[\"embeddings\"].join(\",\") + ']' : '[]' }}'::vector)) AS score_vector,\n    (\n      0.3 * COALESCE(ts_rank_cd(tsv_content, websearch_to_tsquery('portuguese', '{{ $json.query }}')), 0) +\n      0.7 * (1 - (embedding <=> '{{ $json[\"embeddings\"] ? '[' + $json[\"embeddings\"].join(\",\") + ']' : '[]' }}'::vector))\n    ) AS score_combined\nFROM\n    documents\nWHERE\n    tsv_content @@ websearch_to_tsquery('portuguese', '{{ $json.query }}')\nORDER BY\n    score_combined DESC\nLIMIT 5;\n\n",
        "options": {}
      },
      "id": "d9a9556e-e824-4e0e-ab93-6e093cd1a1e0",
      "name": "Vector PGVector1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2,
      "position": [
        1140,
        680
      ],
      "credentials": {
        "postgres": {
          "id": "z2oHR8Hcbud4cXb6",
          "name": "Postgres account"
        }
      }
    }
  ],
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Query Input",
            "type": "main",
            "index": 0
          },
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Embedding": {
      "main": [
        [
          {
            "node": "Hybrid Search PostgreSQL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Hybrid Search PostgreSQL": {
      "main": [
        [
          {
            "node": "Format Context",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar_Embedding_Cohere": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Gerar_Embedding_Cohere",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        []
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Execute a SQL query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Query Input": {
      "main": [
        [
          {
            "node": "BM25 Postgres",
            "type": "main",
            "index": 0
          },
          {
            "node": "Gerar_Embedding_Cohere1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Vector PGVector1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar_Embedding_Cohere1": {
      "main": [
        [
          {
            "node": "Vector PGVector",
            "type": "main",
            "index": 0
          },
          {
            "node": "Vector PGVector1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "BM25 Postgres": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge BM25 + Vector1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vector PGVector": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          },
          {
            "node": "Merge BM25 + Vector1",
            "type": "main",
            "index": 1
          },
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge BM25 + Vector1": {
      "main": [
        [
          {
            "node": "Sort + Rank",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        []
      ]
    },
    "list past extraidos": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Replace Me",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis1": {
      "main": [
        []
      ]
    },
    "Execute a SQL query": {
      "main": [
        [
          {
            "node": "Redis1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {
    "Gerar_Embedding_Cohere1": [
      {
        "json": {
          "id": "510396f5-ff2d-47ad-b8b9-ce88b20e6d8c",
          "texts": [
            "qual e a melhor forma de pagamento"
          ],
          "embeddings": [
            [
              -0.021072388,
              -0.002811432,
              -0.009605408,
              -0.07702637,
              -0.028396606,
              0.038513184,
              -0.06488037,
              -0.008026123,
              0.019760132,
              0.05911255,
              -0.0035152435,
              -0.046325684,
              -0.00038981438,
              -0.023086548,
              -0.029708862,
              -0.028015137,
              0.03414917,
              -0.009643555,
              0.013427734,
              -0.025268555,
              -0.018463135,
              -0.01600647,
              0.022338867,
              -0.039520264,
              0.06323242,
              -0.002456665,
              -0.050933838,
              -0.0033454895,
              0.006038666,
              -0.001663208,
              0.015525818,
              0.01991272,
              0.021850586,
              -0.017456055,
              0.027526855,
              -0.00027418137,
              -0.028793335,
              0.0057907104,
              -0.012565613,
              0.0044021606,
              -0.010894775,
              0.0011062622,
              -0.07287598,
              -0.016860962,
              -0.061279297,
              -0.034179688,
              0.0017957687,
              -0.0017995834,
              -0.042755127,
              -0.043640137,
              0.03149414,
              -0.0519104,
              0.052215576,
              -0.0008907318,
              -0.018371582,
              0.019317627,
              -0.037994385,
              -0.06112671,
              -0.0056495667,
              0.015686035,
              0.032318115,
              -0.01637268,
              0.066467285,
              0.023239136,
              0.014053345,
              -0.034606934,
              -0.040008545,
              0.019363403,
              0.05480957,
              0.047607422,
              0.0017852783,
              -0.0037574768,
              0.030212402,
              0.01763916,
              0.0051956177,
              0.026626587,
              -0.0079422,
              0.06335449,
              0.04284668,
              -0.03955078,
              -0.028457642,
              -0.014846802,
              -0.027069092,
              -0.023712158,
              -0.013931274,
              -0.033172607,
              -0.0075263977,
              -0.0024051666,
              -0.02482605,
              -0.019500732,
              -0.020202637,
              -0.0033798218,
              -0.022384644,
              0.058776855,
              -0.010261536,
              -0.024505615,
              -0.022140503,
              -0.029541016,
              -0.01626587,
              -0.013053894,
              -0.016479492,
              -0.026687622,
              -0.013916016,
              -0.0009069443,
              -0.025726318,
              0.03881836,
              0.032104492,
              -0.020828247,
              -0.016738892,
              0.011711121,
              0.0017414093,
              0.0066604614,
              -0.0056991577,
              0.0046310425,
              -0.022445679,
              0.027236938,
              -0.013717651,
              0.03475952,
              0.0035037994,
              0.034606934,
              -0.02218628,
              -0.00687027,
              0.054473877,
              -0.008483887,
              0.0030288696,
              0.023086548,
              -0.010215759,
              -0.039367676,
              -0.007419586,
              0.04119873,
              0.0035648346,
              0.0014867783,
              -0.101501465,
              -0.015823364,
              -0.013053894,
              -0.019729614,
              0.044067383,
              -0.034423828,
              -0.025238037,
              -0.01977539,
              0.05621338,
              -0.006717682,
              -0.023849487,
              0.03668213,
              -0.031402588,
              0.010978699,
              0.008384705,
              0.025115967,
              0.023788452,
              0.011810303,
              -0.049438477,
              0.02394104,
              0.016448975,
              0.03869629,
              -0.010635376,
              0.05657959,
              -0.09051514,
              0.04800415,
              -0.007019043,
              0.054779053,
              0.016174316,
              -0.02130127,
              -0.02381897,
              0.020126343,
              0.00051641464,
              0.01524353,
              0.03640747,
              0.026367188,
              0.013961792,
              0.062042236,
              -0.018722534,
              0.014541626,
              0.021255493,
              -0.011932373,
              -0.011253357,
              -0.021453857,
              0.01473999,
              -0.010192871,
              0.041870117,
              0.0075798035,
              0.023529053,
              -0.009490967,
              0.035980225,
              0.0021400452,
              -0.047973633,
              -0.05126953,
              0.008811951,
              0.045532227,
              0.03363037,
              0.023498535,
              0.0009202957,
              -0.0124053955,
              0.013786316,
              -0.016357422,
              0.01524353,
              -0.016815186,
              -0.027297974,
              -0.039245605,
              -0.018615723,
              0.043121338,
              0.006580353,
              0.005531311,
              -0.045013428,
              0.037017822,
              -0.024124146,
              0.0034561157,
              -0.014633179,
              -0.024276733,
              0.0070991516,
              0.043273926,
              0.02116394,
              -0.033447266,
              -0.013786316,
              -0.045074463,
              -0.029586792,
              -0.034942627,
              0.00044846535,
              -0.02243042,
              -0.00050878525,
              -0.014724731,
              0.058013916,
              -0.0071487427,
              -0.0038604736,
              0.013465881,
              0.0012702942,
              0.0814209,
              -0.04397583,
              0.024673462,
              0.027679443,
              0.02760315,
              0.043121338,
              -0.009674072,
              0.0012741089,
              0.024169922,
              -0.042663574,
              -0.019317627,
              0.056610107,
              -0.004547119,
              0.020065308,
              0.026748657,
              0.010696411,
              -0.0023498535,
              -0.010604858,
              0.06591797,
              -0.017044067,
              -0.034606934,
              -0.012359619,
              0.047088623,
              -0.020202637,
              -0.023544312,
              0.013511658,
              -0.006629944,
              0.039093018,
              0.022003174,
              -0.019073486,
              0.051727295,
              0.023040771,
              0.033172607,
              0.00484848,
              0.035705566,
              -0.06707764,
              0.013389587,
              0.032928467,
              -0.037750244,
              -0.011421204,
              -0.008529663,
              -0.024124146,
              -0.00869751,
              -0.023330688,
              0.03286743,
              0.03591919,
              -0.034210205,
              -0.0045166016,
              -0.002029419,
              0.08984375,
              0.03616333,
              -0.029830933,
              -0.010070801,
              0.00970459,
              0.0435791,
              -0.027145386,
              0.028930664,
              -0.013374329,
              -0.005329132,
              -0.02305603,
              0.084350586,
              0.018463135,
              -0.025756836,
              -0.037872314,
              0.012458801,
              0.038482666,
              0.04345703,
              0.013710022,
              0.0007200241,
              0.0052261353,
              0.0309906,
              0.030792236,
              0.03829956,
              -0.024047852,
              0.040649414,
              -0.034820557,
              0.043945312,
              0.054595947,
              -0.027404785,
              -0.0042686462,
              0.040252686,
              -0.00057935715,
              0.017852783,
              0.027511597,
              -0.020858765,
              0.026519775,
              0.015487671,
              0.0011472702,
              0.0072631836,
              -0.01713562,
              -0.033599854,
              0.008293152,
              0.0007548332,
              -0.02532959,
              0.017486572,
              0.02168274,
              0.012840271,
              -0.05303955,
              -0.025131226,
              0.0015611649,
              -0.0037078857,
              -0.0129470825,
              -0.012763977,
              -0.00712204,
              0.0040130615,
              0.046905518,
              0.0017223358,
              -0.0018787384,
              0.0022125244,
              0.028579712,
              -0.007083893,
              0.0030326843,
              0.021560669,
              0.017700195,
              0.016708374,
              0.06738281,
              -0.006954193,
              -0.002922058,
              0.015289307,
              0.0340271,
              -0.026779175,
              -0.030853271,
              0.0231781,
              -0.02848816,
              -0.010559082,
              0.01789856,
              -0.037597656,
              -0.022567749,
              0.0028247833,
              0.044891357,
              -0.05633545,
              0.008720398,
              0.07159424,
              0.056518555,
              -0.009025574,
              0.01576233,
              0.011642456,
              -0.01751709,
              -0.0020160675,
              0.036865234,
              -0.06896973,
              0.009521484,
              -0.029953003,
              -0.023635864,
              0.023040771,
              -0.031799316,
              0.034210205,
              0.023620605,
              -0.0030002594,
              -0.070373535,
              0.016601562,
              0.03982544,
              -0.043548584,
              0.022567749,
              0.0009832382,
              -0.009391785,
              -0.0033168793,
              -0.014404297,
              -0.00043845177,
              0.008720398,
              -0.016326904,
              -0.049346924,
              0.026153564,
              -0.0040016174,
              0.016143799,
              -0.013870239,
              0.0033721924,
              0.027908325,
              -0.020843506,
              0.003440857,
              -0.00003874302,
              0.0052223206,
              0.02796936,
              -0.02130127,
              -0.024032593,
              0.038238525,
              0.008758545,
              -0.009269714,
              0.021957397,
              -0.034576416,
              0.0748291,
              0.029449463,
              -0.009269714,
              0.024353027,
              -0.0036315918,
              -0.0041236877,
              0.039855957,
              0.026351929,
              -0.005344391,
              -0.02279663,
              -0.01637268,
              0.0019721985,
              0.030471802,
              -0.036621094,
              -0.032928467,
              0.019210815,
              -0.010894775,
              0.042755127,
              0.025604248,
              -0.052246094,
              -0.008178711,
              0.0066452026,
              0.053222656,
              -0.016571045,
              -0.05935669,
              -0.041412354,
              -0.032989502,
              -0.012451172,
              -0.034301758,
              -0.015098572,
              -0.03616333,
              -0.057037354,
              -0.015914917,
              -0.0014019012,
              -0.03982544,
              -0.074523926,
              0.0027770996,
              0.00072193146,
              0.01737976,
              0.037902832,
              -0.030303955,
              0.0024547577,
              -0.09185791,
              -0.010322571,
              0.0075569153,
              -0.031280518,
              0.010276794,
              0.015510559,
              0.015823364,
              -0.01689148,
              -0.0236969,
              0.024612427,
              0.034484863,
              -0.012123108,
              0.01689148,
              0.022094727,
              -0.007896423,
              0.012168884,
              -0.011634827,
              -0.0473938,
              0.023544312,
              -0.006088257,
              0.034057617,
              -0.013572693,
              -0.033447266,
              0.03062439,
              0.05722046,
              -0.0003232956,
              -0.005016327,
              -0.014732361,
              0.006313324,
              0.015975952,
              0.018722534,
              -0.032287598,
              -0.032928467,
              -0.029937744,
              0.008926392,
              0.04812622,
              -0.014724731,
              -0.000010371208,
              0.0033435822,
              -0.026107788,
              0.047607422,
              0.01197052,
              0.013969421,
              -0.027404785,
              0.003540039,
              -0.005405426,
              -0.004558563,
              -0.0021305084,
              0.003288269,
              0.0030555725,
              -0.028335571,
              0.019210815,
              -0.032562256,
              -0.12286377,
              0.04925537,
              -0.0002875328,
              -0.018081665,
              0.028457642,
              -0.0065612793,
              -0.030593872,
              0.017242432,
              0.016082764,
              0.0040359497,
              -0.009567261,
              -0.027694702,
              0.0009832382,
              -0.021148682,
              0.004711151,
              0.009773254,
              0.009628296,
              -0.023971558,
              -0.011199951,
              0.01789856,
              0.06665039,
              -0.0030174255,
              0.03665161,
              0.008377075,
              0.019927979,
              0.044036865,
              -0.016616821,
              -0.009521484,
              -0.019699097,
              -0.04373169,
              0.026382446,
              -0.008049011,
              -0.0065078735,
              0.014518738,
              0.020721436,
              0.031280518,
              0.014137268,
              -0.048675537,
              0.023223877,
              0.029159546,
              0.03488159,
              0.006801605,
              -0.055480957,
              0.005783081,
              -0.0014514923,
              -0.057128906,
              0.00072717667,
              0.052764893,
              -0.014076233,
              0.04623413,
              0.010040283,
              -0.028656006,
              -0.022247314,
              -0.007980347,
              -0.019363403,
              -0.0044021606,
              -0.03463745,
              0.0043754578,
              -0.06665039,
              0.024261475,
              0.011749268,
              0.019866943,
              -0.03567505,
              0.009773254,
              0.0026721954,
              -0.002243042,
              0.03265381,
              -0.007896423,
              -0.023803711,
              -0.03805542,
              -0.03277588,
              -0.01335144,
              0.029846191,
              0.02456665,
              -0.007949829,
              0.009544373,
              -0.005115509,
              -0.012313843,
              0.0287323,
              0.022705078,
              0.014457703,
              0.09259033,
              0.006214142,
              0.066467285,
              -0.00869751,
              0.061920166,
              -0.016555786,
              0.032470703,
              -0.03894043,
              -0.011833191,
              -0.033477783,
              0.0013942719,
              -0.020523071,
              -0.040802002,
              -0.00016236305,
              -0.009925842,
              0.10449219,
              0.005718231,
              -0.027679443,
              0.024032593,
              0.012176514,
              -0.0037574768,
              0.012763977,
              0.0074386597,
              -0.055419922,
              -0.0056762695,
              0.019302368,
              0.016403198,
              -0.028457642,
              0.022262573,
              -0.043823242,
              0.004310608,
              0.03186035,
              -0.024383545,
              0.041534424,
              0.0099487305,
              0.02784729,
              0.02041626,
              -0.06518555,
              -0.058135986,
              -0.019821167,
              -0.026245117,
              -0.011741638,
              -0.02885437,
              0.014556885,
              0.009277344,
              -0.014778137,
              -0.0052223206,
              -0.0107421875,
              0.02166748,
              -0.032989502,
              0.0069122314,
              -0.022521973,
              -0.017608643,
              0.05831909,
              -0.008117676,
              0.019821167,
              0.029022217,
              0.04272461,
              0.018630981,
              0.015914917,
              -0.0016584396,
              0.02671814,
              0.035186768,
              -0.040405273,
              -0.048187256,
              0.038726807,
              0.0063285828,
              -0.05456543,
              0.021377563,
              -0.022613525,
              0.029525757,
              -0.0005803108,
              0.04272461,
              0.015159607,
              0.06652832,
              -0.044036865,
              0.015899658,
              -0.05911255,
              -0.030441284,
              0.013015747,
              -0.0012340546,
              0.0035438538,
              0.03100586,
              -0.034698486,
              0.026809692,
              0.016296387,
              0.042755127,
              -0.016113281,
              -0.052520752,
              0.033966064,
              -0.017211914,
              0.03265381,
              -0.005268097,
              0.030548096,
              -0.05508423,
              -0.011955261,
              -0.026184082,
              -0.047912598,
              0.007507324,
              0.009651184,
              -0.033477783,
              -0.0014638901,
              0.01676941,
              -0.04321289,
              0.015991211,
              -0.024246216,
              0.010116577,
              -0.031982422,
              -0.03201294,
              -0.059906006,
              0.02331543,
              -0.045684814,
              -0.012176514,
              0.030212402,
              -0.006038666,
              0.011665344,
              -0.02180481,
              0.041046143,
              -0.006210327,
              0.048553467,
              -0.015220642,
              -0.0017089844,
              -0.02268982,
              0.009262085,
              -0.04385376,
              -0.046203613,
              0.00087833405,
              0.032196045,
              0.053771973,
              0.010673523,
              -0.032592773,
              0.024307251,
              -0.003522873,
              -0.024246216,
              -0.013763428,
              0.06173706,
              0.070251465,
              0.053649902,
              -0.0035896301,
              -0.008285522,
              -0.0015258789,
              0.002008438,
              -0.054748535,
              -0.023803711,
              0.01625061,
              -0.039642334,
              0.019561768,
              0.0016412735,
              -0.01020813,
              0.027832031,
              0.038391113,
              -0.0070266724,
              0.005569458,
              0.021759033,
              -0.029403687,
              -0.0047912598,
              0.05911255,
              0.028244019,
              0.007789612,
              -0.0440979,
              -0.0073394775,
              0.040649414,
              0.031066895,
              -0.011955261,
              0.042175293,
              0.0037403107,
              0.049041748,
              -0.051696777,
              -0.00869751,
              -0.013130188,
              0.008758545,
              -0.04119873,
              -0.022781372,
              -0.015823364,
              -0.018920898,
              -0.026779175,
              0.038604736,
              -0.022262573,
              0.021148682,
              -0.028762817,
              0.0063552856,
              -0.015487671,
              0.014076233,
              -0.028808594,
              0.014518738,
              -0.0154953,
              -0.009399414,
              -0.013145447,
              -0.012214661,
              0.027160645,
              0.052581787,
              -0.016296387,
              -0.068725586,
              -0.0004620552,
              0.026931763,
              0.012413025,
              -0.020858765,
              -0.00242424,
              0.005809784,
              0.012229919,
              -0.0026359558,
              -0.024932861,
              -0.0013198853,
              -0.021972656,
              0.0066719055,
              0.06097412,
              0.02458191,
              0.00894165,
              0.047790527,
              -0.0052833557,
              0.026626587,
              -0.0079193115,
              0.0135650635,
              -0.020889282,
              -0.0075187683,
              0.05429077,
              -0.0028591156,
              0.038970947,
              0.011192322,
              -0.003501892,
              -0.11669922,
              -0.010627747,
              -0.02507019,
              -0.0056991577,
              -0.03845215,
              -0.05307007,
              0.050354004,
              0.0026340485,
              0.028396606,
              -0.0042762756,
              -0.010902405,
              0.009803772,
              0.012626648,
              0.008972168,
              0.022247314,
              -0.0042304993,
              -0.026153564,
              -0.0065460205,
              0.00944519,
              0.008850098,
              0.029937744,
              0.0029296875,
              0.022598267,
              -0.01499176,
              0.027709961,
              0.03475952,
              -0.07336426,
              0.024017334,
              -0.017456055,
              0.013183594,
              -0.009384155,
              0.021102905,
              -0.0013504028,
              -0.02067566,
              0.056396484,
              0.02633667,
              0.01259613,
              -0.03491211,
              0.05267334,
              0.02784729,
              -0.027328491,
              0.00024485588,
              0.024047852,
              -0.07543945,
              0.0036563873,
              0.016418457,
              -0.019332886,
              0.044677734,
              -0.02772522,
              0.048431396,
              -0.04611206,
              -0.045562744,
              0.0041885376,
              0.030258179,
              -0.0049705505,
              0.03074646,
              -0.051849365,
              0.02406311,
              -0.04626465,
              -0.066833496,
              0.024673462,
              -0.053527832,
              -0.0034008026,
              0.021453857,
              -0.025543213,
              0.016281128,
              -0.025802612,
              0.0045166016,
              -0.053009033,
              -0.004219055,
              -0.006969452,
              0.062561035,
              0.018569946,
              -0.034484863,
              0.087646484,
              -0.004470825,
              0.0037250519,
              0.051330566,
              -0.045806885,
              0.070617676,
              0.01890564,
              0.039794922,
              0.0309906,
              -0.03652954,
              -0.012451172,
              -0.022323608,
              0.068847656,
              0.045654297,
              -0.012886047,
              0.0055160522,
              -0.038757324,
              0.004081726,
              0.012039185,
              -0.033599854,
              0.0018224716,
              0.013626099,
              -0.030380249,
              -0.038146973,
              -0.015098572,
              0.0056381226,
              -0.017959595,
              0.00944519,
              -0.08868408,
              -0.0758667,
              0.0019817352,
              -0.015464783,
              0.011482239,
              0.0004556179,
              -0.061676025,
              0.011665344,
              0.00434494,
              0.015899658,
              0.05203247,
              -0.04748535,
              -0.026824951,
              0.007987976,
              0.021560669,
              0.04611206,
              0.006095886,
              -0.055847168,
              -0.03062439,
              0.009414673,
              0.027252197,
              -0.025131226,
              -0.005634308,
              -0.08306885,
              -0.0055236816,
              -0.035308838,
              -0.004333496,
              -0.013679504,
              -0.02999878,
              0.0014476776,
              0.066223145,
              0.004802704,
              -0.01914978,
              0.008346558,
              -0.06304932,
              -0.02796936,
              0.031463623,
              0.009742737,
              -0.028778076,
              -0.01991272,
              0.03756714,
              -0.051605225,
              0.048309326,
              0.0067863464,
              -0.07366943,
              0.044311523,
              -0.007446289,
              0.024261475,
              -0.005504608,
              -0.015548706,
              -0.011077881,
              0.038604736,
              0.022094727,
              -0.05041504,
              0.054901123,
              0.040802002,
              0.07348633,
              -0.011100769,
              0.07507324,
              0.00869751,
              0.005847931,
              0.017990112,
              0.021392822,
              -0.0178833,
              0.01537323,
              0.017669678,
              0.01991272,
              0.00818634,
              -0.009399414,
              -0.03161621,
              0.03652954,
              0.012191772,
              -0.030822754,
              -0.021194458,
              0.03100586,
              -0.047180176,
              -0.01852417,
              0.0256958,
              0.033691406,
              0.01448822,
              -0.04437256,
              -0.008018494,
              0.07525635,
              -0.03652954,
              -0.02230835,
              0.0289917,
              -0.0107421875,
              0.0027389526,
              -0.012519836,
              0.018310547,
              0.0061416626,
              -0.08190918,
              0.014274597,
              0.002111435,
              -0.04272461,
              -0.020492554,
              -0.0026550293,
              0.017959595,
              0.049041748,
              0.039794922,
              0.046142578,
              -0.022857666,
              0.043823242,
              0.015213013,
              -0.0003373623,
              -0.020843506,
              -0.0004210472,
              -0.038635254,
              0.029937744,
              0.015670776,
              0.0067329407,
              0.07501221,
              -0.021530151,
              0.008087158,
              -0.057525635,
              0.030654907,
              -0.053833008,
              0.015579224,
              -0.031280518,
              0.009155273,
              0.037628174
            ]
          ],
          "meta": {
            "api_version": {
              "version": "1"
            },
            "billed_units": {
              "input_tokens": 12
            }
          },
          "response_type": "embeddings_floats"
        }
      }
    ],
    "Edit Fields2": [
      {
        "json": {
          "fileName": "/mnt/externo/whatsapp_exports/extracted/n82 9661-1190/82 9661-1190.jsonl"
        }
      }
    ]
  },
  "versionId": "05edde7b-85d7-4f64-8a8e-dfb20f77ddd4",
  "triggerCount": 0,
  "tags": []
}