{
  "createdAt": "2025-07-23T18:33:46.421Z",
  "updatedAt": "2025-07-26T17:19:59.052Z",
  "id": "5nzwk4oAnWQnp9Ig",
  "name": "tratamento de mensagens",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('input').item.json.norm.message.tipo }}",
                    "rightValue": "text",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "7ee43379-e870-4e10-817a-9a839ddd406e"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Texto"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1cf7c86f-98d1-4f57-8091-2bb0efc62e44",
                    "leftValue": "={{ $('input').item.json.norm.message.tipo }}",
                    "rightValue": "audio",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a51d9435-fabf-482a-b9a0-fbf185e7f412",
                    "leftValue": "={{ $('input').item.json.norm.message.tipo }}",
                    "rightValue": "document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Documento"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8baff51c-c345-4de3-b438-262867fdf4c2",
                    "leftValue": "={{ $('input').item.json.norm.message.tipo }}",
                    "rightValue": "imagem",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Imagem"
            }
          ]
        },
        "options": {
          "allMatchingOutputs": true
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -4420,
        -520
      ],
      "id": "a199ddf6-f3e0-4476-8302-2e34a664cba3",
      "name": "Switch",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "01a7ea8d-faec-4aa5-82ee-2f136db1d776",
              "name": "contacinfo.id",
              "value": "={{ $('input').item.json.body.data.key.remoteJid?.split(\"@\")?.first() }}",
              "type": "number"
            },
            {
              "id": "2ad1b6dc-98b1-4f10-81b4-2ae6b0cae31b",
              "name": "contacinfo.nome",
              "value": "={{ $('input').item.json.body.data.pushName }}",
              "type": "string"
            },
            {
              "id": "fbe520db-5656-4b12-a742-d836c03f37d2",
              "name": "message.conteudo",
              "value": "={{ $('input').item.json.body.data.message.conversation }}{{ $('input').item.json.body.data.message.documentMessage.caption }}",
              "type": "string"
            },
            {
              "id": "bb1b700c-9cc8-4e11-aa02-6d1272a6e6da",
              "name": "message.data_hora",
              "value": "={{ DateTime.fromSeconds($('input').item.json.body.data.messageTimestamp).toISO()}}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -4240,
        -740
      ],
      "id": "188eaa96-34a3-485c-8c07-a312f2764651",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "01a7ea8d-faec-4aa5-82ee-2f136db1d776",
              "name": "contacinfo.id",
              "value": "={{ $('input').item.json.body.data.key.remoteJid?.split(\"@\")?.first() }}",
              "type": "number"
            },
            {
              "id": "2ad1b6dc-98b1-4f10-81b4-2ae6b0cae31b",
              "name": "contacinfo.nome",
              "value": "={{ $('input').item.json.body.data.pushName }}",
              "type": "string"
            },
            {
              "id": "fbe520db-5656-4b12-a742-d836c03f37d2",
              "name": "message.conteudo.base64",
              "value": "={{ $('input').item.json.body.data.message.base64 }}",
              "type": "string"
            },
            {
              "id": "bb1b700c-9cc8-4e11-aa02-6d1272a6e6da",
              "name": "message.data_hora",
              "value": "={{ DateTime.fromSeconds($('input').item.json.body.data.messageTimestamp).toISO()}}",
              "type": "string"
            },
            {
              "id": "3ec8e2d0-8b07-43e2-985e-dbc48cbe8ea9",
              "name": "message.conteudo.url",
              "value": "={{ $('input').item.json.body.data.message.audioMessage.url }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -4040,
        -540
      ],
      "id": "b56236ac-f68c-47f8-bbd4-aa5d73a61fbf",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "message.conteudo.base64",
        "options": {
          "fileName": "=file-{{ $json.contacinfo.id }}_{{ $('input').item.json.body.data.messageTimestamp }}.ogg",
          "mimeType": "audio/ogg"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -3240,
        -580
      ],
      "id": "9ae8358b-00e2-44d0-b517-c7f92e0aced3",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.groq.com/openai/v1/audio/transcriptions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "whisper-large-v3-turbo"
            },
            {
              "name": "temperature",
              "value": "0"
            },
            {
              "name": "response_format",
              "value": "verbose_json"
            },
            {
              "name": "language",
              "value": "pt"
            },
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "data"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2520,
        -560
      ],
      "id": "03c63818-1695-4cec-88b1-485ac12feaf0",
      "name": "HTTP Request",
      "credentials": {
        "httpHeaderAuth": {
          "id": "KW0uLEkG9HB7moO8",
          "name": "grok"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "01a7ea8d-faec-4aa5-82ee-2f136db1d776",
              "name": "contacinfo.id",
              "value": "={{ $('input').item.json.body.data.key.remoteJid?.split(\"@\")?.first() }}",
              "type": "number"
            },
            {
              "id": "2ad1b6dc-98b1-4f10-81b4-2ae6b0cae31b",
              "name": "contacinfo.nome",
              "value": "={{ $('input').item.json.body.data.pushName }}",
              "type": "string"
            },
            {
              "id": "fbe520db-5656-4b12-a742-d836c03f37d2",
              "name": "message.conteudo.base64",
              "value": "={{ $('input').item.json.body.data.message.base64 }}",
              "type": "string"
            },
            {
              "id": "bb1b700c-9cc8-4e11-aa02-6d1272a6e6da",
              "name": "message.data_hora",
              "value": "={{ DateTime.fromSeconds($('input').item.json.body.data.messageTimestamp).toISO()}}",
              "type": "string"
            },
            {
              "id": "3ec8e2d0-8b07-43e2-985e-dbc48cbe8ea9",
              "name": "message.conteudo.url",
              "value": "={{ $('input').item.json.body.data.message.audioMessage.url }}",
              "type": "string"
            },
            {
              "id": "a05c6d3b-190b-4e33-8958-11d53c7e7391",
              "name": "message.texto",
              "value": "={{ $('input').item.json.body.data.message.documentMessage.caption }}",
              "type": "string"
            },
            {
              "id": "2c13f33c-7fdb-4bdb-a81a-55f2bc469520",
              "name": "body.instance",
              "value": "={{ $('input').item.json.body.instance }}",
              "type": "string"
            },
            {
              "id": "5447c9bd-e1e6-4e83-9640-6b5b1391054b",
              "name": "body.data.key.id",
              "value": "={{ $('input').item.json.body.data.key.id }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -4200,
        -260
      ],
      "id": "e6e7bbf5-1a80-4440-9b77-8c555f18c8b4",
      "name": "Edit Fields3"
    },
    {
      "parameters": {
        "fileName": "=/mnt/externo/n8n_files/{{ $('input').item.json.body.data.message.documentMessage.fileName }}",
        "options": {
          "append": false
        }
      },
      "id": "14b5c511-fd36-4a30-b613-a2cda29ed80f",
      "name": "Salvar PDF em Disco",
      "type": "n8n-nodes-base.writeBinaryFile",
      "typeVersion": 1,
      "position": [
        -3540,
        -260
      ]
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -2660,
        -260
      ],
      "id": "0dcb8d50-e72d-4153-a16f-47f168824172",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "message.conteudo.base64",
        "options": {
          "fileName": "={{ $('input').item.json.body.data.message.documentMessage.fileName }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -3760,
        -260
      ],
      "id": "fcb22b6d-cedd-479f-9fd0-a2e9086c87f8",
      "name": "Convert to File1"
    },
    {
      "parameters": {
        "numberInputs": 4
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        -1420,
        -600
      ],
      "id": "3fda8a7c-e6c9-4918-8751-f34f1e055988",
      "name": "Merge",
      "executeOnce": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "27d3e871-ab2c-4ab9-9028-a14e294a0a0f",
              "leftValue": "={{ $json.message.conteudo.base64 }}",
              "rightValue": "null",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3820,
        -540
      ],
      "id": "9abdb8e4-9cf2-4d83-8436-1bb2b30300a6",
      "name": "If1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "27d3e871-ab2c-4ab9-9028-a14e294a0a0f",
              "leftValue": "={{ $json.message.conteudo.base64 }}",
              "rightValue": "null",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4040,
        -260
      ],
      "id": "d6ae30f1-1b02-49a4-9226-06f17a2b7ecd",
      "name": "If2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $item(0).$node['Cod_text_limp'].json.texto_limpo }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "Você receberá um texto extraído de um comprovante de pagamento via pdftotext.\nExtraia os dados mais relevantes para alimentar a seguinte tabela de movimentações financeiras: livro_caixa.\n\nPreencha os campos abaixo com base no texto. Use null quando o dado não for encontrado. Retorne somente um JSON com os seguintes campos:\n\njson\nCopiar\nEditar\n{\n  \"tipo\": \"entrada\" ou \"saida\",             // Determine com base no texto: quem pagou e quem recebeu?\n  \"descricao\": \"...\",                       // Breve descrição do pagamento\n  \"categoria\": \"...\",                       // Se identificável (ex: \"frete\", \"cliente\", \"fornecedor\")\n  \"valor\": 152.30,                          // Valor pago ou recebido\n  \"data_movimento\": \"2025-05-31\",           // Data real do pagamento (formato: AAAA-MM-DD)\n  \"forma_pagamento\": \"PIX\",                 // Ex: PIX, TED, DOC, transferência\n  \"banco\": \"Banco do Brasil\",               // Banco do recebedor\n  \"cliente_id\": null,                       // Deixe null (será preenchido posteriormente)\n  \"nota_id\": null,                          // Deixe null (será preenchido posteriormente)\n  \"usuario\": null,                          // Deixe null\n  \"observacao\": null,                       // Preencha com dados que pareçam relevantes mas não encaixam nos campos principais\n  \"tags\": [\"cliente\", \"frete\"],             // Se possível, gere tags a partir do contexto\n  \"origem\": \"comprovante\",                  // Sempre use \"comprovante\"\n  \"conta_id\": null                          // Deixe null\n}\nRegras:\n\ntipo deve ser \"entrada\" se a empresa recebeu o valor, ou \"saida\" se pagou.\n\ndata_movimento é obrigatória e deve ser real (não usar data de hoje, use a do comprovante).\n\nvalor, banco, e forma_pagamento também são obrigatórios.\n\nCorrija valores como \"1 . 5 2 , 3 0\" → 152.30.\n\nSe o texto estiver confuso, priorize dados do recebedor (a empresa) para classificar entrada/saída.\n\nRetorne somente o JSON, no exato formato acima, sem explicações ou comentários."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -2220,
        -260
      ],
      "id": "375c517a-b4da-4d4e-9057-d8ffb3af2f9b",
      "name": "AI Agent2",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "const textoOriginal = $json.text_pdf || $json.text || \"\";\n\nconst textoLimpo = textoOriginal\n  // Remove quebras de linha múltiplas e excessivas\n  .replace(/[\\n\\r]+/g, \" \")\n  // Remove espaços repetidos\n  .replace(/\\s{2,}/g, \" \")\n  // Remove rodapé automático do TCPDF\n  .replace(/Powered by TCPDF.*?$/, \"\")\n  .replace(/\\\\?1 \\/ 1/g, \"\")\n  .trim();\n\nreturn [{ json: { texto_limpo: textoLimpo } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2440,
        -260
      ],
      "id": "504ff958-9509-46b8-a6de-83196fba8e36",
      "name": "Cod_text_limp"
    },
    {
      "parameters": {
        "jsCode": "let texto = $json.output || \"\";\n\n// Remove a marca de início e fim de bloco de código Markdown\ntexto = texto.replace(/```json\\s*|\\s*```/g, \"\").trim();\n\nreturn [{\n  json: {\n    ...$json,\n    output: texto\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1860,
        -260
      ],
      "id": "609b288b-b799-4752-b6e1-66c1dc55c512",
      "name": "Code",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "let nota = JSON.parse(JSON.stringify($json.saida_ia));\n\n// Compactar produtos se tiver mais que 5\nif (nota.produtos && nota.produtos.length > 5) {\n  nota.produtos = nota.produtos.map(p => ({\n    descricao: p.descricao,\n    quantidade: p.quantidade,\n    valor_total: p.valor_total\n  }));\n}\n\n// Retorna a nota compactada como string formatada\nreturn [{\n  json: {\n    ...$json,\n    nota_compactada: JSON.stringify(nota, null, 2)\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1720,
        -260
      ],
      "id": "152988d9-2cd4-4328-b0a8-1798251ae79c",
      "name": "Code1",
      "disabled": true
    },
    {
      "parameters": {
        "resource": "chat-api",
        "operation": "get-media-base64",
        "instanceName": "={{ $('input').item.json.body.instance }}",
        "messageId": "={{ $('input').item.json.body.data.key.id }}"
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        -3860,
        -40
      ],
      "id": "32bb6481-1406-451b-a7a8-0959408bb185",
      "name": "Obter m dia em base64",
      "credentials": {
        "evolutionApi": {
          "id": "R2j8KIOLhEjdWQUa",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data.base64",
        "options": {
          "fileName": "={{ $('input').item.json.body.data.message.documentMessage.fileName }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -3700,
        -40
      ],
      "id": "217060bf-29be-4f76-a97f-0d55684f4141",
      "name": "Convert to File2"
    },
    {
      "parameters": {
        "resource": "chat-api",
        "operation": "get-media-base64",
        "instanceName": "={{ $('input').item.json.body.instance }}",
        "messageId": "={{ $('input').item.json.body.data.key.id }}"
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        -3360,
        -460
      ],
      "id": "0becacce-0a3c-473a-8676-820ce503acb6",
      "name": "Obter m dia em base",
      "credentials": {
        "evolutionApi": {
          "id": "R2j8KIOLhEjdWQUa",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data.base64",
        "options": {
          "fileName": "={{ $('input').item.json.body.data.message.documentMessage.fileName }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -3120,
        -460
      ],
      "id": "940e5ba7-5f16-4dbb-be53-8b8d7c25234e",
      "name": "Convert to File3"
    },
    {
      "parameters": {
        "command": "=pdfimages -list /mnt/externo/n8n_files/{{ $('input').item.json.body.data.message.documentMessage.fileName }}"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -3320,
        -260
      ],
      "id": "4d14fa03-66e8-42d8-86c4-89e921412498",
      "name": "Execute Command"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n    const lines = item.json.stdout.split(\"\\n\");\n    const dataLine = lines.find(line => line.trim().startsWith(\"1\"));\n    if (dataLine) {\n        const parts = dataLine.trim().split(/\\s+/);\n        item.json = {\n            page: parts[0],\n            num: parts[1],\n            type: parts[2],\n            width: parts[3],\n            height: parts[4],\n            color: parts[5],\n            comp: parts[6],\n            bpc: parts[7],\n            enc: parts[8],\n            interp: parts[9],\n            object: parts[10] + \" \" + parts[11],\n            x_ppi: parts[12],\n            y_ppi: parts[13],\n            size: parts[14],\n            ratio: parts[15],\n            has_image: true\n        };\n    } else {\n        item.json = {\n            has_image: false\n        };\n    }\n    return item;\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3140,
        -260
      ],
      "id": "c7616b90-8e2e-448f-a0a9-cc3247087f16",
      "name": "Code2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "61be0cae-4d0f-4c04-addf-e95184c74998",
              "leftValue": "={{ $json.has_image }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2980,
        -260
      ],
      "id": "322c3cc7-b83d-4519-8187-e9132eb44b84",
      "name": "If4"
    },
    {
      "parameters": {
        "command": "=pdfimages -png \"/mnt/externo/n8n_files/{{ $('input').item.json.body.data.message.documentMessage.fileName }}\" \"/mnt/externo/n8n_files/{{ $('input').item.json.body.data.message.documentMessage.fileName }}\""
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -2700,
        20
      ],
      "id": "8802a7e3-c5ab-4a22-8b1d-5d39ba908e8b",
      "name": "Execute Command1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4ba7f5ab-fa4a-46cb-93c2-3002bd998584",
              "name": "conteudo",
              "value": "=texto: {{ $json.message.conteudo }}",
              "type": "string"
            },
            {
              "id": "aaf60004-debc-48e2-af8a-38c90f0c7eb4",
              "name": "whats",
              "value": "={{ $('input').item.json.contacinfo.id }}",
              "type": "string"
            },
            {
              "id": "798b603f-cf88-4482-8956-0d460838fee9",
              "name": "nome",
              "value": "={{ $json.contacinfo.nome }}",
              "type": "string"
            },
            {
              "id": "c67cf052-061a-4e3a-ad83-f2eacc0453e2",
              "name": "id",
              "value": "={{ $('input').item.json.body.data.key.id }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2300,
        -760
      ],
      "id": "6e9dfe1c-3cf0-44ea-be2a-6795d6af5928",
      "name": "contText",
      "alwaysOutputData": false,
      "executeOnce": false
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4ba7f5ab-fa4a-46cb-93c2-3002bd998584",
              "name": "conteudo",
              "value": "=audio: {{ $json.text }}",
              "type": "string"
            },
            {
              "id": "aaf60004-debc-48e2-af8a-38c90f0c7eb4",
              "name": "whats",
              "value": "={{ $('input').item.json.contacinfo.id }}",
              "type": "string"
            },
            {
              "id": "32799c4d-abfe-4f88-9821-f626ee6d3fe3",
              "name": "nome",
              "value": "={{ $('Edit Fields2').item.json.contacinfo.nome }}",
              "type": "string"
            },
            {
              "id": "4f982e6b-a0a4-4a02-97f9-9d6ea0ddb745",
              "name": "id",
              "value": "={{ $('input').item.json.body.data.key.id }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2300,
        -560
      ],
      "id": "0329b356-e54c-47fd-ae76-3a8932299a88",
      "name": "contAudio",
      "alwaysOutputData": false,
      "executeOnce": false
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4ba7f5ab-fa4a-46cb-93c2-3002bd998584",
              "name": "conteudo",
              "value": "=documento: {{ $json.segments[0].text }}",
              "type": "string"
            },
            {
              "id": "aaf60004-debc-48e2-af8a-38c90f0c7eb4",
              "name": "whats",
              "value": "={{ $('input').item.json.contacinfo.id }}",
              "type": "string"
            },
            {
              "id": "798b603f-cf88-4482-8956-0d460838fee9",
              "name": "nome",
              "value": "={{ $('Edit Fields3').item.json.contacinfo.nome }}",
              "type": "string"
            },
            {
              "id": "2d41cc85-f07b-43ce-b839-1e52e0b7d57f",
              "name": "id",
              "value": "={{ $('input').item.json.body.data.key.id }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1580,
        -260
      ],
      "id": "1a3cf02c-ed9b-4b72-9109-4fb1fc49ea7b",
      "name": "contDoc",
      "alwaysOutputData": false,
      "executeOnce": false
    },
    {
      "parameters": {
        "resource": "chat-api",
        "operation": "get-media-base64",
        "instanceName": "={{ $('input').item.json.body.instance }}",
        "messageId": "={{ $('input').item.json.body.data.key.id }}"
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        -3300,
        260
      ],
      "id": "f058cce7-bb05-4ae5-8498-c7ffb26d1d19",
      "name": "Obter m dia em base65",
      "credentials": {
        "evolutionApi": {
          "id": "R2j8KIOLhEjdWQUa",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data.base64",
        "options": {
          "fileName": "={{ $('input').item.json.body.data.message.documentMessage.fileName }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -3140,
        260
      ],
      "id": "4e566f4e-bd81-4e96-9bc6-f48e975b3fee",
      "name": "Convert to File4"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "27d3e871-ab2c-4ab9-9028-a14e294a0a0f",
              "leftValue": "={{ $json.message.conteudo.base64 }}",
              "rightValue": "null",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3480,
        120
      ],
      "id": "e7fc4307-495a-4d60-9097-e7ef60724501",
      "name": "If6"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "message.conteudo.base64",
        "options": {
          "fileName": "={{ $('input').item.json.body.data.message.documentMessage.fileName }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -3160,
        100
      ],
      "id": "480bb4b8-8fcb-4b54-8815-06eb48b0f13b",
      "name": "Convert to File5"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4ba7f5ab-fa4a-46cb-93c2-3002bd998584",
              "name": "conteudo",
              "value": "=imagem: {{ $json.content }}",
              "type": "string"
            },
            {
              "id": "aaf60004-debc-48e2-af8a-38c90f0c7eb4",
              "name": "whats",
              "value": "={{ $('input').item.json.contacinfo.id }}",
              "type": "string"
            },
            {
              "id": "798b603f-cf88-4482-8956-0d460838fee9",
              "name": "nome",
              "value": "={{ $('input').item.json.body.data.pushName }}",
              "type": "string"
            },
            {
              "id": "c6730188-7eb2-42b3-9cbc-6f48d87f5039",
              "name": "id",
              "value": "={{ $('input').item.json.body.data.key.id }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1540,
        180
      ],
      "id": "886eadb7-b70f-4c46-9741-e919ed27dd3a",
      "name": "contDoc1",
      "alwaysOutputData": false,
      "executeOnce": false
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -4780,
        -500
      ],
      "id": "8f6b450f-a1bf-4084-a429-30336b5d5c69",
      "name": "input"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "GPT-4O"
        },
        "text": "=Você é um analisador de imagens para atendimento de materiais de construção.\n\nAnalise a imagem enviada e:\n\n1️⃣ Verifique se a imagem contém uma lista de materiais de construção (quantidades, tipos, tamanhos, medidas ou valores).\n\nSe contiver, extraia em JSON estruturado neste formato:\n\n{\n  \"materiais\": [\n    {\"quantidade\": 38, \"descricao\": \"treliça\", \"comprimento\": \"2.50\"},\n    {\"quantidade\": 20, \"descricao\": \"ferragem\", \"comprimento\": \"3.80\"}\n  ]\n\nnão Ignore texto ou fundo irrelevante.\n\n2️⃣ Se a imagem NÃO contiver uma lista de materiais, apenas descreva o que está visível na imagem em linguagem natural (ex: “Imagem de um comprovante do Banco do Brasil de 17 de julho no valor de R$ 120,00” ou “Foto de vigotas empilhadas em um caminhão”).\n\nRetorne sempre em JSON neste formato:\n\n{\n  \"tipo\": \"lista_materiais\" ou \"descricao_imagem\",\n  \"conteudo\": {...} ou \"Descrição em texto\"\n}\n\nCaso identifique um item e os demais tenham características similares (quantidade + comprimento em metros), assuma que também são [descrição do 1 item] caso não haja indicação clara do contrário.",
        "inputType": "base64",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -2940,
        180
      ],
      "id": "12d0d8cb-1b0c-4f3b-91ed-e812977c45a8",
      "name": "Analyze image",
      "credentials": {
        "openAiApi": {
          "id": "3mNlZ20nDfXfgUl9",
          "name": "OpenAi account"
        }
      }
    }
  ],
  "connections": {
    "Switch": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "contText",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "contAudio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Salvar PDF em Disco": {
      "main": [
        [
          {
            "node": "Execute Command",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Cod_text_limp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "Salvar PDF em Disco",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Obter m dia em base",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Obter m dia em base64",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent2": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cod_text_limp": {
      "main": [
        [
          {
            "node": "AI Agent2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "contDoc",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obter m dia em base64": {
      "main": [
        [
          {
            "node": "Convert to File2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File2": {
      "main": [
        [
          {
            "node": "Salvar PDF em Disco",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obter m dia em base": {
      "main": [
        [
          {
            "node": "Convert to File3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File3": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Command1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "contText": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "contAudio": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "contDoc": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Obter m dia em base65": {
      "main": [
        [
          {
            "node": "Convert to File4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File4": {
      "main": [
        [
          {
            "node": "Analyze image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If6": {
      "main": [
        [
          {
            "node": "Convert to File5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Obter m dia em base65",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File5": {
      "main": [
        [
          {
            "node": "Analyze image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "contDoc1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "input": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze image": {
      "main": [
        [
          {
            "node": "contDoc1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {
    "input": [
      {
        "json": {
          "headers": {
            "content-type": "application/json",
            "user-agent": "axios/1.7.9",
            "content-length": "51432",
            "accept-encoding": "gzip, compress, deflate, br",
            "host": "host.docker.internal:5678",
            "connection": "keep-alive"
          },
          "params": {},
          "query": {},
          "body": {
            "event": "messages.upsert",
            "instance": "meu cell",
            "data": {
              "key": {
                "remoteJid": "558281036911@s.whatsapp.net",
                "fromMe": true,
                "id": "FF767BE84565683A135DC85C0DE4C29A"
              },
              "pushName": "Guardião Lajes",
              "status": "SERVER_ACK",
              "message": {
                "audioMessage": {
                  "url": "https://mmg.whatsapp.net/v/t62.7117-24/55670529_1236410921301127_3653692264078588002_n.enc?ccb=11-4&oh=01_Q5Aa2AGJeigRa5ELaVwvJqH0b0v0xgSeql3_2maNeJ0uzJh1ww&oe=68AB7170&_nc_sid=5e03e0&mms3=true",
                  "mimetype": "audio/ogg; codecs=opus",
                  "fileSha256": "SRsXEx8IoFZwrwmAIVXyI/aKcEwyrIYOFs0AAbZD3vA=",
                  "fileLength": "37415",
                  "seconds": 16,
                  "ptt": false,
                  "mediaKey": "/n2u/ZXZ5MimTxp3yR8SW0AvzGQlGfo29/EpQEZN/Zs=",
                  "fileEncSha256": "t4WxsOc3aCeWPll6/0ejHSOKqrjHfmEHHhYm5jjJQjY=",
                  "directPath": "/v/t62.7117-24/55670529_1236410921301127_3653692264078588002_n.enc?ccb=11-4&oh=01_Q5Aa2AGJeigRa5ELaVwvJqH0b0v0xgSeql3_2maNeJ0uzJh1ww&oe=68AB7170&_nc_sid=5e03e0&_nc_hot=1753549982",
                  "mediaKeyTimestamp": "1753476928",
                  "contextInfo": {
                    "forwardingScore": 1,
                    "isForwarded": true
                  },
                  "waveform": "AA0XUWFbYlhCYypESUdLVS5CIVtiU2FMTF5CYj40T1svHBYdNE9eIF5eXFxaQlpjX2NjWFlZS15iYGJSHCwZEg=="
                },
                "base64": "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"
              },
              "contextInfo": {
                "forwardingScore": 1,
                "isForwarded": true
              },
              "messageType": "audioMessage",
              "messageTimestamp": 1753549983,
              "instanceId": "53b4f8d8-92ba-4830-8363-2b31690f03bc",
              "source": "android"
            },
            "destination": "http://host.docker.internal:5678/webhook/c74a111e-4f99-4cba-b913-ee63a320cd0b",
            "date_time": "2025-07-26T14:13:04.236Z",
            "sender": "558281036911@s.whatsapp.net",
            "server_url": "http://localhost:8080",
            "apikey": "A45ACCDF0A06-4675-9D48-37543E73A7A2"
          },
          "webhookUrl": "http://localhost:5678/webhook/c74a111e-4f99-4cba-b913-ee63a320cd0b",
          "executionMode": "production",
          "norm": {
            "contacinfo": {
              "id": "558281036911",
              "nome": "Guardião Lajes",
              "participantID": null
            },
            "message": {
              "tipo": "audio",
              "data_hora": "2025-07-26T13:13:03.000-04:00",
              "fileName": null,
              "id": "FF767BE84565683A135DC85C0DE4C29A"
            }
          }
        }
      }
    ],
    "HTTP Request": [
      {
        "json": {
          "task": "transcribe",
          "language": "Portuguese",
          "duration": 16.829999999,
          "text": " E aí meu patrão, boa tarde, ainda não vai dar boa noite já. Olha, vem pra mim, 24 telisca de 4 metros. 24, é telisca né, telisca né, de 4 metros pra mim. Vem aí um orçamentozinho, se der pra fazer ainda hoje, se não amanhã.",
          "segments": [
            {
              "id": 0,
              "seek": 0,
              "start": 0,
              "end": 4.5,
              "text": " E aí meu patrão, boa tarde, ainda não vai dar boa noite já.",
              "tokens": [
                50365,
                462,
                7461,
                9230,
                1947,
                36837,
                11,
                22422,
                27367,
                11,
                11804,
                2431,
                4405,
                4072,
                22422,
                34429,
                6242,
                13,
                50590
              ],
              "temperature": 0,
              "avg_logprob": -0.2631693,
              "compression_ratio": 1.4444444,
              "no_speech_prob": 3.6435915e-12
            },
            {
              "id": 1,
              "seek": 0,
              "start": 5.1,
              "end": 8.46,
              "text": " Olha, vem pra mim, 24 telisca de 4 metros.",
              "tokens": [
                50620,
                19450,
                11,
                19053,
                3206,
                12247,
                11,
                4022,
                15284,
                271,
                496,
                368,
                1017,
                34761,
                13,
                50788
              ],
              "temperature": 0,
              "avg_logprob": -0.2631693,
              "compression_ratio": 1.4444444,
              "no_speech_prob": 3.6435915e-12
            },
            {
              "id": 2,
              "seek": 0,
              "start": 9.56,
              "end": 12.7,
              "text": " 24, é telisca né, telisca né, de 4 metros pra mim.",
              "tokens": [
                50843,
                4022,
                11,
                1136,
                15284,
                271,
                496,
                7024,
                11,
                15284,
                271,
                496,
                7024,
                11,
                368,
                1017,
                34761,
                3206,
                12247,
                13,
                51000
              ],
              "temperature": 0,
              "avg_logprob": -0.2631693,
              "compression_ratio": 1.4444444,
              "no_speech_prob": 3.6435915e-12
            },
            {
              "id": 3,
              "seek": 0,
              "start": 12.78,
              "end": 15.4,
              "text": " Vem aí um orçamentozinho, se der pra fazer ainda hoje, se não amanhã.",
              "tokens": [
                51004,
                691,
                443,
                7461,
                1105,
                420,
                1138,
                8824,
                31282,
                11,
                369,
                1163,
                3206,
                6736,
                11804,
                13458,
                11,
                369,
                2431,
                42943,
                36320,
                13,
                51135
              ],
              "temperature": 0,
              "avg_logprob": -0.2631693,
              "compression_ratio": 1.4444444,
              "no_speech_prob": 3.6435915e-12
            }
          ],
          "x_groq": {
            "id": "req_01k13vjn41fwvakvc8b2jyy6g8"
          }
        }
      }
    ]
  },
  "versionId": "a7ef763a-a167-4504-a5a7-779b8ac9f732",
  "triggerCount": 0,
  "tags": []
}