{
  "createdAt": "2025-07-10T20:05:13.566Z",
  "updatedAt": "2025-07-10T20:21:46.737Z",
  "id": "oEgGaOjRHITpdzbf",
  "name": "entrada",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "c74a111e-4f99-4cba-b913-ee63a320cd0b",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1560,
        240
      ],
      "id": "e071b03a-ca56-4045-9492-f416e7b1f995",
      "name": "Webhook",
      "webhookId": "b1eba78e-4d42-4d37-b97a-fb3d96edd6e0"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7c9248e5-26e0-45a7-aec2-9c3cb8437695",
              "leftValue": "={{ $('Webhook').item.json.body.event }}",
              "rightValue": "messages.upsert",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1000,
        240
      ],
      "id": "281efed4-3a25-42b6-9c4e-146555eaeabd",
      "name": "If"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Edit Fields6').item.json.message.tipo }}",
                    "rightValue": "text",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "7ee43379-e870-4e10-817a-9a839ddd406e"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Texto"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1cf7c86f-98d1-4f57-8091-2bb0efc62e44",
                    "leftValue": "={{ $('Edit Fields6').item.json.message.tipo }}",
                    "rightValue": "audio",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a51d9435-fabf-482a-b9a0-fbf185e7f412",
                    "leftValue": "={{ $('Edit Fields6').item.json.message.tipo }}",
                    "rightValue": "document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Documento"
            }
          ]
        },
        "options": {
          "allMatchingOutputs": true
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -780,
        240
      ],
      "id": "54401070-8769-40b3-9ec2-8418b1f4734e",
      "name": "Switch",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "01a7ea8d-faec-4aa5-82ee-2f136db1d776",
              "name": "contacinfo.id",
              "value": "={{ $('Webhook').item.json.body.data.key.remoteJid?.split(\"@\")?.first() }}",
              "type": "number"
            },
            {
              "id": "2ad1b6dc-98b1-4f10-81b4-2ae6b0cae31b",
              "name": "contacinfo.nome",
              "value": "={{ $('Webhook').item.json.body.data.pushName }}",
              "type": "string"
            },
            {
              "id": "fbe520db-5656-4b12-a742-d836c03f37d2",
              "name": "message.conteudo",
              "value": "={{ $('Webhook').item.json.body.data.message.conversation }}{{ $('Webhook').item.json.body.data.message.documentMessage.caption }}",
              "type": "string"
            },
            {
              "id": "bb1b700c-9cc8-4e11-aa02-6d1272a6e6da",
              "name": "message.data_hora",
              "value": "={{ DateTime.fromSeconds($('Webhook').item.json.body.data.messageTimestamp).toISO()}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        0,
        0
      ],
      "id": "f4363f67-702b-49b0-b39d-1722e322f3ce",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "01a7ea8d-faec-4aa5-82ee-2f136db1d776",
              "name": "contacinfo.id",
              "value": "={{ $('Webhook').item.json.body.data.key.remoteJid?.split(\"@\")?.first() }}",
              "type": "number"
            },
            {
              "id": "2ad1b6dc-98b1-4f10-81b4-2ae6b0cae31b",
              "name": "contacinfo.nome",
              "value": "={{ $('Webhook').item.json.body.data.pushName }}",
              "type": "string"
            },
            {
              "id": "fbe520db-5656-4b12-a742-d836c03f37d2",
              "name": "message.conteudo.base64",
              "value": "={{ $('Webhook').item.json.body.data.message.base64 }}",
              "type": "string"
            },
            {
              "id": "bb1b700c-9cc8-4e11-aa02-6d1272a6e6da",
              "name": "message.data_hora",
              "value": "={{ DateTime.fromSeconds($('Webhook').item.json.body.data.messageTimestamp).toISO()}}",
              "type": "string"
            },
            {
              "id": "3ec8e2d0-8b07-43e2-985e-dbc48cbe8ea9",
              "name": "message.conteudo.url",
              "value": "={{ $('Webhook').item.json.body.data.message.audioMessage.url }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -560,
        240
      ],
      "id": "f48c15ae-5cce-407c-ab56-bc4c2ed9d9c4",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "message.conteudo.base64",
        "options": {
          "fileName": "=file-{{ $json.contacinfo.id }}_{{ $('Webhook').item.json.body.data.messageTimestamp }}.ogg",
          "mimeType": "audio/ogg"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        140,
        220
      ],
      "id": "e57af72c-35c1-461f-8892-14ab38796b9d",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.groq.com/openai/v1/audio/transcriptions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "whisper-large-v3-turbo"
            },
            {
              "name": "temperature",
              "value": "0"
            },
            {
              "name": "response_format",
              "value": "verbose_json"
            },
            {
              "name": "language",
              "value": "pt"
            },
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "data"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        520,
        200
      ],
      "id": "89ceb018-747d-4c7e-8b49-339dd712267e",
      "name": "HTTP Request",
      "credentials": {
        "httpHeaderAuth": {
          "id": "KW0uLEkG9HB7moO8",
          "name": "grok"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "01a7ea8d-faec-4aa5-82ee-2f136db1d776",
              "name": "contacinfo.id",
              "value": "={{ $('Webhook').item.json.body.data.key.remoteJid?.split(\"@\")?.first() }}",
              "type": "number"
            },
            {
              "id": "2ad1b6dc-98b1-4f10-81b4-2ae6b0cae31b",
              "name": "contacinfo.nome",
              "value": "={{ $('Webhook').item.json.body.data.pushName }}",
              "type": "string"
            },
            {
              "id": "fbe520db-5656-4b12-a742-d836c03f37d2",
              "name": "message.conteudo.base64",
              "value": "={{ $('Webhook').item.json.body.data.message.base64 }}",
              "type": "string"
            },
            {
              "id": "bb1b700c-9cc8-4e11-aa02-6d1272a6e6da",
              "name": "message.data_hora",
              "value": "={{ DateTime.fromSeconds($('Webhook').item.json.body.data.messageTimestamp).toISO()}}",
              "type": "string"
            },
            {
              "id": "3ec8e2d0-8b07-43e2-985e-dbc48cbe8ea9",
              "name": "message.conteudo.url",
              "value": "={{ $('Webhook').item.json.body.data.message.audioMessage.url }}",
              "type": "string"
            },
            {
              "id": "a05c6d3b-190b-4e33-8958-11d53c7e7391",
              "name": "message.texto",
              "value": "={{ $('Webhook').item.json.body.data.message.documentMessage.caption }}",
              "type": "string"
            },
            {
              "id": "2c13f33c-7fdb-4bdb-a81a-55f2bc469520",
              "name": "body.instance",
              "value": "={{ $('Webhook').item.json.body.instance }}",
              "type": "string"
            },
            {
              "id": "5447c9bd-e1e6-4e83-9640-6b5b1391054b",
              "name": "body.data.key.id",
              "value": "={{ $('Webhook').item.json.body.data.key.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -940,
        560
      ],
      "id": "d5c705c4-a5ed-4d8b-9797-ff60eaeae717",
      "name": "Edit Fields3"
    },
    {
      "parameters": {
        "fileName": "=n8n/n8n_files",
        "options": {
          "append": false
        }
      },
      "id": "dd39afe7-d82e-4c73-96a0-99044f4c00da",
      "name": "Salvar PDF em Disco",
      "type": "n8n-nodes-base.writeBinaryFile",
      "typeVersion": 1,
      "position": [
        -240,
        500
      ]
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -20,
        500
      ],
      "id": "c2e1f27a-363a-44d2-9340-1928bc724f1d",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "message.conteudo.base64",
        "options": {
          "fileName": "={{ $('Webhook').item.json.body.data.message.documentMessage.fileName }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -460,
        500
      ],
      "id": "f3386a28-372c-4d15-bc6b-0fdcf02f959a",
      "name": "Convert to File1"
    },
    {
      "parameters": {
        "numberInputs": 4
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        1480,
        260
      ],
      "id": "9f1d0b47-1c81-4de6-8b4c-dd536b54da8e",
      "name": "Merge",
      "executeOnce": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "27d3e871-ab2c-4ab9-9028-a14e294a0a0f",
              "leftValue": "={{ $json.message.conteudo.base64 }}",
              "rightValue": "null",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -340,
        240
      ],
      "id": "1ddf832b-2779-493f-8314-5eab3fdfc0c4",
      "name": "If1"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH FoundRecord AS (\n    SELECT\n        id,\n        referencia,\n        texto_original,\n        1 - (embedding <=> '[{{ $json.embeddings[0].join(',') }}]') AS cosine_similarity\n    FROM\n        pagamentos_embeddings\n    WHERE\n        (embedding <=> '[{{ $json.embeddings[0].join(',') }}]') < 0.05\n    ORDER BY\n        embedding <=> '[{{ $json.embeddings[0].join(',') }}]'\n    LIMIT 1\n)\nSELECT\n    COALESCE(fr.id, NULL) AS id, -- Retorna o ID se achado, senão NULL\n    COALESCE(fr.referencia, NULL) AS referencia, -- Retorna referencia se achado, senão NULL\n    COALESCE(fr.texto_original, NULL) AS texto_original, -- Retorna texto_original se achado, senão NULL\n    COALESCE(fr.cosine_similarity, NULL) AS cosine_similarity, -- Retorna similaridade se achado, senão NULL\n    (fr.id IS NOT NULL) AS existe -- Retorna TRUE se achado (id não é NULL), senão FALSE\nFROM\n    (SELECT 1 AS dummy_key) AS dummy -- Tabela dummy para garantir sempre 1 linha\nLEFT JOIN\n    FoundRecord fr ON 1 = 1; -- LEFT JOIN sempre trará a linha da dummy",
        "options": {}
      },
      "id": "136dcb64-90e0-4ed3-b615-685f29dc28ae",
      "name": "Consultar PGVector",
      "type": "n8n-nodes-base.postgres",
      "position": [
        20,
        740
      ],
      "typeVersion": 2.6
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "27d3e871-ab2c-4ab9-9028-a14e294a0a0f",
              "leftValue": "={{ $json.message.conteudo.base64 }}",
              "rightValue": "null",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -780,
        560
      ],
      "id": "2a00a1e7-e08c-4ce6-a594-635f36145173",
      "name": "If2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "28145bb4-2ff0-40f9-a3ef-611246189cc1",
              "leftValue": "={{ $json.existe }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        180,
        740
      ],
      "id": "aff8f907-9ffb-49b1-aa78-165157ac8d89",
      "name": "If3"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $item(0).$node['Cod_text_limp'].json.texto_limpo }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "Você receberá um texto extraído de um comprovante de pagamento via pdftotext.\nExtraia os dados mais relevantes para alimentar a seguinte tabela de movimentações financeiras: livro_caixa.\n\nPreencha os campos abaixo com base no texto. Use null quando o dado não for encontrado. Retorne somente um JSON com os seguintes campos:\n\njson\nCopiar\nEditar\n{\n  \"tipo\": \"entrada\" ou \"saida\",             // Determine com base no texto: quem pagou e quem recebeu?\n  \"descricao\": \"...\",                       // Breve descrição do pagamento\n  \"categoria\": \"...\",                       // Se identificável (ex: \"frete\", \"cliente\", \"fornecedor\")\n  \"valor\": 152.30,                          // Valor pago ou recebido\n  \"data_movimento\": \"2025-05-31\",           // Data real do pagamento (formato: AAAA-MM-DD)\n  \"forma_pagamento\": \"PIX\",                 // Ex: PIX, TED, DOC, transferência\n  \"banco\": \"Banco do Brasil\",               // Banco do recebedor\n  \"cliente_id\": null,                       // Deixe null (será preenchido posteriormente)\n  \"nota_id\": null,                          // Deixe null (será preenchido posteriormente)\n  \"usuario\": null,                          // Deixe null\n  \"observacao\": null,                       // Preencha com dados que pareçam relevantes mas não encaixam nos campos principais\n  \"tags\": [\"cliente\", \"frete\"],             // Se possível, gere tags a partir do contexto\n  \"origem\": \"comprovante\",                  // Sempre use \"comprovante\"\n  \"conta_id\": null                          // Deixe null\n}\nRegras:\n\ntipo deve ser \"entrada\" se a empresa recebeu o valor, ou \"saida\" se pagou.\n\ndata_movimento é obrigatória e deve ser real (não usar data de hoje, use a do comprovante).\n\nvalor, banco, e forma_pagamento também são obrigatórios.\n\nCorrija valores como \"1 . 5 2 , 3 0\" → 152.30.\n\nSe o texto estiver confuso, priorize dados do recebedor (a empresa) para classificar entrada/saída.\n\nRetorne somente o JSON, no exato formato acima, sem explicações ou comentários."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        320,
        800
      ],
      "id": "f642b5c2-142f-4b6f-adcf-d6c934220e11",
      "name": "AI Agent2",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "const textoOriginal = $json.text_pdf || $json.text || \"\";\n\nconst textoLimpo = textoOriginal\n  // Remove quebras de linha múltiplas e excessivas\n  .replace(/[\\n\\r]+/g, \" \")\n  // Remove espaços repetidos\n  .replace(/\\s{2,}/g, \" \")\n  // Remove rodapé automático do TCPDF\n  .replace(/Powered by TCPDF.*?$/, \"\")\n  .replace(/\\\\?1 \\/ 1/g, \"\")\n  .trim();\n\nreturn [{ json: { texto_limpo: textoLimpo } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        200,
        500
      ],
      "id": "024a60d2-544f-40fd-b5f8-5861975efed5",
      "name": "Cod_text_limp"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.cohere.com/v1/embed",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"embed-english-v3.0\",\n  \"input_type\": \"search_document\",\n  \"texts\": [\n    \"{{ $json.texto_limpo }}\"\n  ]\n} ",
        "options": {}
      },
      "id": "0dc858cd-da49-4d6b-a378-fd219bee90b1",
      "name": "Gerar_Embedding_Cohere",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -140,
        740
      ],
      "typeVersion": 4.2,
      "credentials": {
        "httpHeaderAuth": {
          "id": "OyCraanHEQ1O0xVC",
          "name": "cohere"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO pagamentos_embeddings (\n  origem, referencia, embedding\n) VALUES (\n  $1, $2, $3::vector\n)\nRETURNING id;",
        "options": {
          "queryReplacement": "=[\n  \"{{ $item(0).$node['Edit Fields8'].json.contacinfo.id }}\",\n  \"{{ $('Webhook').item.json.body.data.message.documentMessage.fileName }}\",\n  {{ $item(0).$node['Gerar_Embedding_Cohere'].json.embeddings[0] }}\n]\n"
        }
      },
      "id": "ece48d44-fb2a-4b81-91a0-bdba3d822ea8",
      "name": "Salvar Novo Embedding2",
      "type": "n8n-nodes-base.postgres",
      "position": [
        660,
        1020
      ],
      "typeVersion": 2.6
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE pagamentos_embeddings\nSET saida_ia = $1,\n  texto_original = $3\nWHERE\n    id = $2; \n",
        "options": {
          "queryReplacement": "=[  \n\"{{ $('Code').item.json.output }}\",  \n\"{{ $json.id }}\"\n\"{{ $('Cod_text_limp').item.json.texto_limpo }}\"\n]"
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        800,
        1020
      ],
      "id": "3ff6c1ba-f296-4f5f-a130-fc83b02237fe",
      "name": "Postgres1"
    },
    {
      "parameters": {
        "modelName": "models/gemini-1.5-flash",
        "options": {
          "temperature": 0
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        320,
        960
      ],
      "id": "b002dfd8-0b19-4d7f-988b-b5fdf1974c5c",
      "name": "Google Gemini Chat Model"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT saida_ia\nFROM pagamentos_embeddings\nWHERE\n  id = $1;",
        "options": {
          "queryReplacement": "={{ $json.id }}"
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1160,
        640
      ],
      "id": "b327244c-8e65-4947-a42b-196d58d9d216",
      "name": "Postgres"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9259334a-c721-497e-ae7c-a77e73cdc3fc",
              "name": "id",
              "value": "={{ $json.id || ($item(0).$node[\"Salvar Novo Embedding2\"] && $item(0).$node[\"Salvar Novo Embedding2\"].json.id) }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        980,
        660
      ],
      "id": "81d10ca7-3755-4996-8d71-c4fe3f00b769",
      "name": "Edit Fields5"
    },
    {
      "parameters": {
        "jsCode": "let texto = $json.output || '';\ntexto = texto.replace(/<think>[\\\\s\\\\S]*?<\\\\/think>/gi, '').trim();\nreturn [{ json: { output_limpo: texto } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1200,
        1280
      ],
      "id": "255ec68d-fefc-4941-966e-551f8ed68eb3",
      "name": "Cod_output_limp1"
    },
    {
      "parameters": {
        "jsCode": "let texto = $json.output || \"\";\n\n// Remove a marca de início e fim de bloco de código Markdown\ntexto = texto.replace(/```json\\s*|\\s*```/g, \"\").trim();\n\nreturn [{\n  json: {\n    ...$json,\n    output: texto\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        480,
        1020
      ],
      "id": "2874a476-ae4d-4a97-914d-ceef0b63a7d9",
      "name": "Code"
    },
    {
      "parameters": {
        "jsCode": "let nota = JSON.parse(JSON.stringify($json.saida_ia));\n\n// Compactar produtos se tiver mais que 5\nif (nota.produtos && nota.produtos.length > 5) {\n  nota.produtos = nota.produtos.map(p => ({\n    descricao: p.descricao,\n    quantidade: p.quantidade,\n    valor_total: p.valor_total\n  }));\n}\n\n// Retorna a nota compactada como string formatada\nreturn [{\n  json: {\n    ...$json,\n    nota_compactada: JSON.stringify(nota, null, 2)\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1380,
        640
      ],
      "id": "6bab6ff6-325a-4933-a1aa-bf8903347c1e",
      "name": "Code1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "862b0f99-966d-40e2-8624-ae74e23ea715",
              "name": "contacinfo.id",
              "value": "={{ $json.body.data.key.remoteJid?.split(\"@\")?.[0] }}",
              "type": "string"
            },
            {
              "id": "265936b5-f5f4-4258-b02e-a52b3857571b",
              "name": "contacinfo.nome",
              "value": "={{ $json.body.data.pushName }}",
              "type": "string"
            },
            {
              "id": "85a6fad8-5d54-4017-8bcf-9b847d14788d",
              "name": "message.tipo",
              "value": "={{ (\n  (!!$json.body.data.message.audioMessage && 'audio' || \n   !!$json.body.data.message.conversation && 'text' || \n   !!$json.body.data.message.imageMessage && 'imagem' || \n   !!$json.body.data.message.sticlerMessage && 'sticker' || \n   !!$json.body.data.message.documentMessage && 'document')\n).replace(/\\s+/g, '') }}",
              "type": "string"
            },
            {
              "id": "0cd1bdf7-4362-4aa7-b125-ac472f232443",
              "name": "message.data_hora",
              "value": "={{ DateTime.fromSeconds($json.body.data.messageTimestamp).toISO() }}",
              "type": "string"
            },
            {
              "id": "4cc90948-c202-4817-91f0-36d5b1707f9d",
              "name": "message.fileName",
              "value": "={{ $json.body.data.message.documentMessage.fileName?.split(\".\")?.[1] }}",
              "type": "string"
            },
            {
              "id": "5863ba85-91b8-4243-81a0-349fde49fcfc",
              "name": "body.data.key.participant",
              "value": "={{ $json.body.data.key.participant?.split(\"@\")?.[0] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1380,
        240
      ],
      "id": "47da943d-cfb2-4016-9ad4-3695933c5072",
      "name": "Edit Fields6"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -1280,
        480
      ],
      "id": "35d559bd-9afa-414b-aee5-823da8215bdb",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4ba7f5ab-fa4a-46cb-93c2-3002bd998584",
              "name": "audio",
              "value": "=audio \"{{ $json.segments[0].text }}\"",
              "type": "string"
            },
            {
              "id": "5a1763db-caa1-4828-ac2c-63efffcbf4d5",
              "name": "user",
              "value": "={{ $('Code2').item.json.participante }}",
              "type": "string"
            },
            {
              "id": "1e6923f3-e5ff-4ec6-90f3-40c9822c173b",
              "name": "pdf",
              "value": "=PDF \"{{ $json.nota_compactada }}\"",
              "type": "string"
            },
            {
              "id": "16f35020-4cc1-43df-9dfb-b16ccb92ac50",
              "name": "texto_pdf",
              "value": "=text_pdf \"{{ $('Webhook').item.json.body.data.message.documentMessage.caption }}\"",
              "type": "string"
            },
            {
              "id": "0149a057-5dc2-4ab7-9f26-1ad9f6883101",
              "name": "texto",
              "value": "=text \"{{ $json.message.conteudo }}\"",
              "type": "string"
            },
            {
              "id": "093d0dc5-01fe-45e5-8e4f-aadfc3b94981",
              "name": "tipo",
              "value": "={{ $('Code2').item.json.tipo }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1720,
        740
      ],
      "id": "736a0832-430b-46f4-84b5-67de7fc84f70",
      "name": "Edit Fields7",
      "alwaysOutputData": false,
      "executeOnce": false
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4ba7f5ab-fa4a-46cb-93c2-3002bd998584",
              "name": "conteudo",
              "value": "=audio: {{ $json.segments[0].text }}",
              "type": "string"
            },
            {
              "id": "aaf60004-debc-48e2-af8a-38c90f0c7eb4",
              "name": "whats",
              "value": "={{ $('Edit Fields6').item.json.contacinfo.id }}",
              "type": "string"
            },
            {
              "id": "798b603f-cf88-4482-8956-0d460838fee9",
              "name": "nome",
              "value": "={{ $('Edit Fields2').item.json.contacinfo.nome }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        900,
        240
      ],
      "id": "02ce87e0-5884-421d-a4b8-18ec8387278d",
      "name": "Edit Fields8",
      "alwaysOutputData": false,
      "executeOnce": false
    },
    {
      "parameters": {
        "url": "=http://192.168.1.26:8090/api/resource/Lead?filters=[[\"whatsapp_no\", \"=\", \"{{ $('Merge').item.json.whats }}\"]]&fields=[\"lead_name\", \"name\"]",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "erpNextApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "filters",
              "value": "="
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2120,
        380
      ],
      "id": "4da2f631-91af-42fa-950a-259a44087f80",
      "name": "Consulta_CRM"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "28fab5ad-2903-4c62-981e-9e9f1d62304b",
              "leftValue": "={{ $json.data[0].name }}",
              "rightValue": "",
              "operator": {
                "type": "dateTime",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2280,
        380
      ],
      "id": "c145fdbe-65c5-4acf-ba30-223831ee2fa5",
      "name": "If_CRM"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://192.168.1.26:8090/api/resource/Lead",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "erpNextApi",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "doctype",
              "value": "Lead"
            },
            {
              "name": "subject",
              "value": "=Lead de WhatsApp - {{ $('Merge').item.json.whats }}"
            },
            {
              "name": "whatsapp_no",
              "value": "={{ $('Merge').item.json.whats }}"
            },
            {
              "name": "status",
              "value": "Open"
            },
            {
              "name": "custom_status_automacao",
              "value": "Novo"
            },
            {
              "name": "custom_última_etapa_funil",
              "value": "Recepção de Mensagem"
            },
            {
              "name": "custom_log_atendimento",
              "value": "=Primeira mensagem recebida via WhatsApp em {{ new Date().toLocaleString('pt-BR', { timeZone: 'America/Maceio' }) }}"
            },
            {
              "name": "lead_name",
              "value": "=unknown"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2500,
        480
      ],
      "id": "d2a09dc3-34b3-4303-9495-6cb36244e16c",
      "name": "cadastro_CRM"
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $json.data.whatsapp_no }}",
        "value": "={\n  \"lead_erpnext_name\": \"{{ $json.data.name }}\", \"whatsapp_number\": \"{{ $json.data.whatsapp_no }}\",   \"current_status\": \"Em Atendimento\",   \"last_message_received\": \"{{ $('Merge').item.json.conteudo}}\",   \"last_interaction_timestamp\": \"{{ new Date().toISOString() }}\",   \"etapa_funil\": \"Recepção de Mensagem\",   \"sev_responsavel\": \"SDR_hb\", \"obs\": null, \"nome\": \"{{ $json.data.lead_name }}\", \"logs\":\"\" }",
        "keyType": "string",
        "expire": true,
        "ttl": 1840
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2660,
        480
      ],
      "id": "0c32f7db-4409-4cfc-b5b7-ae313c04ee3c",
      "name": "new_atend"
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $('Merge').item.json.whats }}",
        "value": "={\n  \"lead_erpnext_name\": \"{{ $('Consulta_CRM').item.json.data[0].name }}\",\n  \"whatsapp_number\": \"{{ $('Merge').item.json.whats }}\",\n  \"current_status\": \"Em Atendimento\",\n  \"last_message_received\": \"{{ $('Merge').item.json.conteudo }}\",\n  \"last_interaction_timestamp\": \"{{ new Date().toISOString() }}\",\n  \"etapa_funil\": \"Recepção de Mensagem\",\n  \"sev_responsavel\": \"SDR_hb\",\n  \"obs\": null,\n  \"nome\": \"{{ $('Consulta_CRM').item.json.data[0].lead_name }}\",\n  \"logs\": \"\"\n}\n",
        "keyType": "string",
        "expire": true,
        "ttl": 1840
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2660,
        360
      ],
      "id": "056baa5d-6f47-41a6-b0d2-28a91f3de5fb",
      "name": "new_atend2"
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('Merge').item.json.whats}}",
        "keyType": "string",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2900,
        400
      ],
      "id": "8238e2d2-dbee-4754-9da0-96a336227c81",
      "name": "Consulta_new_atend"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.sev_responsavel }}",
                    "rightValue": "SDR",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    },
                    "id": "eb891abb-7f42-4f0e-8d98-8b0367014143"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "SDR"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "df8fff76-4583-477b-ae9d-b0e07f49479f",
                    "leftValue": "={{ $json.sev_responsavel }}",
                    "rightValue": "closer",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CLOSER"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "39f4b4ed-685f-436f-82bf-889274af183b",
                    "leftValue": "={{ $json.sev_responsavel }}",
                    "rightValue": "pos",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "POS-VENDA"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3500,
        280
      ],
      "id": "6dcf738c-2a0e-4f2f-b146-2a0dc5062955",
      "name": "Switch1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4ba7f5ab-fa4a-46cb-93c2-3002bd998584",
              "name": "conteudo",
              "value": "=texto: {{ $json.message.conteudo }}",
              "type": "string"
            },
            {
              "id": "aaf60004-debc-48e2-af8a-38c90f0c7eb4",
              "name": "whats",
              "value": "={{ $('Edit Fields6').item.json.contacinfo.id }}",
              "type": "string"
            },
            {
              "id": "798b603f-cf88-4482-8956-0d460838fee9",
              "name": "nome",
              "value": "={{ $json.contacinfo.nome }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        900,
        0
      ],
      "id": "8421c23f-8f79-4766-bfda-efdb352c1fd0",
      "name": "Edit Fields9",
      "alwaysOutputData": false,
      "executeOnce": false
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "9quZTbKik4EG8Y1m",
          "mode": "list",
          "cachedResultName": "SDR"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        3740,
        120
      ],
      "id": "745a0d3d-e07e-4345-b660-4f4a0d82b213",
      "name": "Workflow_SDR"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        3740,
        280
      ],
      "id": "fd2fea45-8341-4904-9c77-ecc19d133d0b",
      "name": "Workflow_Closer",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        3740,
        460
      ],
      "id": "8cbbe14f-8d87-420a-9ea0-d9a6234f3446",
      "name": "Workflow_pos",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $json.whats }}1",
        "keyType": "string",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1700,
        280
      ],
      "id": "57336f79-344f-4d95-8274-f1d3d7bbb804",
      "name": "andamento_atendimento1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "439e3f72-397e-41b1-a7ce-9905afa8d060",
              "leftValue": "={{ $json.propertyName }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1880,
        280
      ],
      "id": "3db64c49-50ac-4d08-8688-fb2e403b62ca",
      "name": "If5"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        3320,
        280
      ],
      "id": "51dc13f3-5461-423a-9bd9-5849a7739066",
      "name": "Merge1"
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $('Merge').item.json.whats}}",
        "value": "={\n  \"lead_erpnext_name\": \"{{ $json.lead_erpnext_name }}\",\n  \"whatsapp_number\": \"{{ $json.whatsapp_number }}\",\n  \"current_status\": \"Em Atendimento\",\n  \"last_message_received\": \"{{ $('Merge').item.json.conteudo }}\",\n  \"last_interaction_timestamp\": \"{{ new Date().toISOString() }}\",\n  \"etapa_funil\": \"Recepção de Mensagem\",\n  \"sev_responsavel\": \"SDR\",\n  \"obs\": null,\n  \"nome\": \"{{ $json.nome }}\",\n  \"logs\": [\n    {\n      \"quem\": \"{{ $json.logs[0].quem }}\",\n      \"mensagem\": \"{{ $json.logs[0].mensagem }}\",\n      \"timestamp\": \"{{ $json.logs[0].timestamp }}\"\n    }\n  ]\n}\n"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2400,
        260
      ],
      "id": "4772d379-eaa0-4834-bf3b-06d287539d83",
      "name": "Redis"
    },
    {
      "parameters": {
        "jsCode": "const raw = items[0].json.propertyName;\n\n// Tenta remover aspas duplas externas inválidas no início/fim\nlet cleaned = raw.trim().replace(/^\"+|\"+$/g, '');\n\n// Corrige campo \"logs\" malformado: tira aspas duplicadas externas da string do array\ncleaned = cleaned.replace(/\"logs\":\"\\\"/, '\"logs\":');\ncleaned = cleaned.replace(/}\\\"\\s*}$/, '}]}');\n\n// Agora tentamos parsear\nlet parsed;\ntry {\n  parsed = JSON.parse(cleaned);\n} catch (error) {\n  throw new Error('Erro ao converter para JSON. Verifique a entrada. Detalhes: ' + error.message);\n}\n\n// Se ainda estiver com logs como string, tentamos parsear também\nif (typeof parsed.logs === \"string\") {\n  try {\n    parsed.logs = JSON.parse(parsed.logs);\n  } catch (e) {\n    parsed.logs = [];\n  }\n}\n\nreturn [{ json: parsed }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2120,
        260
      ],
      "id": "e1bf0dc1-ef95-4157-b001-237ef0a535cd",
      "name": "Code3"
    },
    {
      "parameters": {
        "jsCode": "const raw = items[0].json.propertyName;\n\n// Tenta remover aspas duplas externas do JSON principal\nlet cleaned = raw.trim().replace(/^\"+|\"+$/g, '');\n\n// Corrige o campo logs com regex\ncleaned = cleaned\n  .replace(/\"logs\":\"\\\\*\"?\\[{/, '\"logs\":[{')   // início do array JSON\n  .replace(/\\\\*\"?}(\"?)}$/, '}]}');           // fim do array JSON\n\nlet parsed;\ntry {\n  parsed = JSON.parse(cleaned);\n} catch (error) {\n  throw new Error('Erro ao converter para JSON. Verifique a entrada. Detalhes: ' + error.message + \"\\nJSON final:\\n\" + cleaned);\n}\n\nreturn [{ json: parsed }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3100,
        400
      ],
      "id": "9fa53909-cc40-44c5-845f-d443b711d9f9",
      "name": "Code4"
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Edit Fields6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Edit Fields9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Salvar PDF em Disco": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Cod_text_limp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "Salvar PDF em Disco",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Edit Fields8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "andamento_atendimento1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Consultar PGVector": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent2": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cod_text_limp": {
      "main": [
        [
          {
            "node": "Gerar_Embedding_Cohere",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar_Embedding_Cohere": {
      "main": [
        [
          {
            "node": "Consultar PGVector",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Salvar Novo Embedding2": {
      "main": [
        [
          {
            "node": "Postgres1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres1": {
      "main": [
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields5": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Salvar Novo Embedding2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "Edit Fields6": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields8": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Consulta_CRM": {
      "main": [
        [
          {
            "node": "If_CRM",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If_CRM": {
      "main": [
        [
          {
            "node": "new_atend2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "cadastro_CRM",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "cadastro_CRM": {
      "main": [
        [
          {
            "node": "new_atend",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "new_atend2": {
      "main": [
        [
          {
            "node": "Consulta_new_atend",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "new_atend": {
      "main": [
        [
          {
            "node": "Consulta_new_atend",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Consulta_new_atend": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields9": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Workflow_SDR",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Workflow_Closer",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Workflow_pos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "andamento_atendimento1": {
      "main": [
        [
          {
            "node": "If5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If5": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Consulta_CRM",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {
    "HTTP Request": [
      {
        "json": {
          "task": "transcribe",
          "language": "Portuguese",
          "duration": 1.29,
          "text": " Música",
          "segments": [
            {
              "id": 0,
              "seek": 0,
              "start": 0,
              "end": 1.3,
              "text": " Música",
              "tokens": [
                50365,
                376,
                14372,
                50430
              ],
              "temperature": 0,
              "avg_logprob": 0.43368363,
              "compression_ratio": 0.46666667,
              "no_speech_prob": 1.4902546e-10
            }
          ],
          "x_groq": {
            "id": "req_01jxdyepfrfn5vs63271739yh4"
          }
        }
      }
    ],
    "Webhook": [
      {
        "json": {
          "headers": {
            "content-type": "application/json",
            "user-agent": "axios/1.7.9",
            "content-length": "905",
            "accept-encoding": "gzip, compress, deflate, br",
            "host": "192.168.1.26:5678",
            "connection": "keep-alive"
          },
          "params": {},
          "query": {},
          "body": {
            "event": "messages.upsert",
            "instance": "teste",
            "data": {
              "key": {
                "remoteJid": "558281036911@s.whatsapp.net",
                "fromMe": false,
                "id": "E6B545008FE136D7A20E03C0313C8747"
              },
              "pushName": "Guardião Lajes",
              "status": "DELIVERY_ACK",
              "message": {
                "conversation": "Oi",
                "messageContextInfo": {
                  "deviceListMetadata": {
                    "senderKeyHash": "FzBu4LD9MVVgrQ==",
                    "senderTimestamp": "1749504925",
                    "recipientKeyHash": "1jLvfWOwaHNxSw==",
                    "recipientTimestamp": "1749589492"
                  },
                  "deviceListMetadataVersion": 2,
                  "messageSecret": "RAPBDqS69zqQDk8u1OrI/R8Z1TJ46kWdYlyRqY5MnPo="
                }
              },
              "messageType": "conversation",
              "messageTimestamp": 1749676813,
              "instanceId": "e187095c-1b66-4e1c-baee-0cbdceb7ed81",
              "source": "android"
            },
            "destination": "http://192.168.1.26:5678/webhook-test/c74a111e-4f99-4cba-b913-ee63a320cd0b",
            "date_time": "2025-06-11T18:20:13.535Z",
            "sender": "558294077885@s.whatsapp.net",
            "server_url": "http://localhost:8080",
            "apikey": "652DFE4F35FC-4B03-ACB2-2D03476440A8"
          },
          "webhookUrl": "http://localhost:5678/webhook-test/c74a111e-4f99-4cba-b913-ee63a320cd0b",
          "executionMode": "test"
        }
      }
    ]
  },
  "versionId": "aa188225-a5f6-4d4d-ad30-ae67c6140528",
  "triggerCount": 0,
  "tags": [
    {
      "createdAt": "2025-07-10T20:19:24.702Z",
      "updatedAt": "2025-07-10T20:19:24.702Z",
      "id": "VRmSdtFbSN3BkiqH",
      "name": "GL"
    },
    {
      "createdAt": "2025-07-10T20:19:24.664Z",
      "updatedAt": "2025-07-10T20:19:24.664Z",
      "id": "cYovOiLISxXgMtoe",
      "name": "vendas"
    }
  ]
}